{% set _locale = 'fr' %}
{% set _profile = app.user %}

{% set _accountGroupAll = app.session.get('account_types') %}
{% set _accountGroupForUser = _accountGroupAll %}

<!DOCTYPE html>
<html lang="{{ _locale }}">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
    <title>{% block title %}DatiCash - {% endblock %}</title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <!-- Animation Css -->
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/animate-css/animate.css') }}">

    <!-- Select2 -->
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/select2/css/select2.min.css') }}">
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css') }}">

    <!-- waitMe -->
    <link rel="stylesheet" href="{{ asset('assets/js/waitMe-gh-pages/waitMe.min.css') }}">
    <!-- Bootstrap4 Duallistbox -->
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css') }}">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/fontawesome-free/css/all.min.css') }}">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- daterange picker -->
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/daterangepicker/daterangepicker.css') }}">
    <!-- DataTables -->
    <link rel="stylesheet" href="{{ asset('adminLTE/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css') }}">
    <!-- Theme style -->
    <link rel="stylesheet" href="{{ asset('adminLTE/dist/css/adminlte.min.css') }}">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <!-- Datiuser style-->
    {% block stylesheets %}
        <!-- Font Awesome -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/fontawesome-free/css/all.min.css') }}">
        <!-- Ionicons -->
        <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
        <!-- daterange picker -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/daterangepicker/daterangepicker.css') }}">
        <!-- Tempusdominus Bbootstrap 4 -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css') }} ">
        <!-- iCheck -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/icheck-bootstrap/icheck-bootstrap.min.css') }}">
        <!-- JQVMap -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/jqvmap/jqvmap.min.css') }}">
        <!-- Theme style -->
        <link rel="stylesheet" href="{{ asset('adminLTE/dist/css/adminlte.min.css') }}">
        <!-- overlayScrollbars -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/overlayScrollbars/css/OverlayScrollbars.min.css') }}">
        <!-- Daterange picker -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/daterangepicker/daterangepicker.css') }}">
        <!-- summernote -->
        <link rel="stylesheet" href="{{ asset('adminLTE/plugins/summernote/summernote-bs4.css') }}">
        <!-- Google Font: Source Sans Pro -->
        <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">

    {% endblock %}

    <!-- Sweet alert scripts-->
    <script src="{{ asset('assets/js/sweetalert2/sweetalert2.all.min.js') }}"></script>
    <script src="{{ asset('assets/js/sweetalert2/sweetalert2.min.js') }}"></script>
    {% block head_javascripts %}{% endblock %}
    <style>
        body {
            min-width: 350px;
        }

        body.modal-open {
        // block scroll for mobile;
        // causes underlying page to jump to top;
        // prevents scrolling on all screens
        overflow: hidden;
            position: relative;
        }
        body.viewport-lg {
        // block scroll for desktop;
        // will not jump to top;
        // will not prevent scroll on mobile
        position: absolute;
        }

        .sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active, .sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active {
            background-color: #84A8AC;
            color: #fff;
        }

        [class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link.active, [class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link.active:focus, [class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link.active:hover {
            background-color: rgba(132, 168, 168, 0.4);
            color: #fefeff;
        }

        [class*=sidebar-dark-] {
            background-color: #1F4051;
        }

        .datibox-bg-light {
            background-color: #84A8AC!important;
        }
        .datibox-bg-light, .datibox-bg-light>a {
            color: #fff!important;
        }

        .datibox-bg-dark {
            background-color: #84A8AC!important;
        }
        .datibox-bg-dark, .datibox-bg-dark>a {
            color: #fff!important;
        }

        .datibox-bg-primary {
            background-color: #2C6FB7!important;
        }
        .datibox-bg-primary, .datibox-bg-primary>a {
            color: #fff!important;
        }

        a {
            color: #1f4051;
            text-decoration: none;
            background-color: transparent;
        }

        a:hover {
            color: #2C6FB7;
            text-decoration: none;
        }

        .datibadge-primary {
            color: #fff;
            background-color: #2C6FB7;
        }

        .datibadge-dark {
            color: #fff;
            background-color: #1F4051;
        }
        .datitext-primary {
            color: #2C6FB7!important;
        }
        .datitext-dark {
            color: #1F4051!important;
        }
        .nav-pills .nav-link.active, .nav-pills .show>.nav-link {
            color: #343a40;
            background-color: #f4f6f9;
        }
        .card-primary:not(.card-outline)>.card-header, .card-primary:not(.card-outline)>.card-header a {
            color: #343a40;
        }
        .card-primary:not(.card-outline)>.card-header {
            background-color: #f4f6f9;
        }
        .card-primary.card-outline {
            border-top: 3px solid #1f4051;
        }
        .pin-block .pincode_label {
            font-size: 16px;
            font-weight: 600;
            margin-top: -1px;
            display: block;
        }
        .pin-block .description {
            color: #6c757d;
            font-size: 13px;
            margin-top: -3px;
            display: block;
        }
        .profile-user-label {
            color: #1f4051;
            text-decoration: none;
            background-color: transparent;
            cursor: pointer;
        }
        .profile-user-label:hover {
            color: #2C6FB7;
        }

        /*upload profile*/
        .profile input[type='file']{
            position: absolute;
            margin-top: 3px;
            margin-left: 3px;
            height: 1px;
            width: 1px;
            z-index: -5;
        }
        .products-list .account-name {
            font-weight: 600;
        }

        .swal2-container {
            z-index: 9999999;
        }

        .input-error {
            color: red!important;
            border-color:red;
        }

        .swal2-btn {
            margin: .3125em;
            padding: .625em 2em;
            box-shadow: none;
            font-weight: 500;
        }

        .blink_text {

            animation:2s blinker linear infinite;
            -webkit-animation:2s blinker linear infinite;
            -moz-animation:2s blinker linear infinite;

            color: #fff;
        }

        @-moz-keyframes blinker {
            0% { opacity: 1.0; }
            50% { opacity: 0.0; }
            100% { opacity: 1.0; }
        }

        @-webkit-keyframes blinker {
            0% { opacity: 1.0; }
            50% { opacity: 0.0; }
            100% { opacity: 1.0; }
        }

        @keyframes blinker {
            0% { opacity: 1.0; }
            50% { opacity: 0.0; }
            100% { opacity: 1.0; }
        }


        .blink_text_status {

            animation:1s blinker linear infinite;
            -webkit-animation:1s blinker linear infinite;
            -moz-animation:1s blinker linear infinite;

        }

        @-moz-keyframes blinker {
            0% { opacity: 1.0; }
            50% { opacity: 0.0; }
            100% { opacity: 1.0; }
        }

        @-webkit-keyframes blinker {
            0% { opacity: 1.0; }
            50% { opacity: 0.0; }
            100% { opacity: 1.0; }
        }

        @keyframes blinker {
            0% { opacity: 1.0; }
            50% { opacity: 0.0; }
            100% { opacity: 1.0; }
        }

        .text-ellipsied{
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }

        /* Thumbnails ================================== */
        .thumbnail {
            -webkit-border-radius: 0;
            -moz-border-radius: 0;
            -ms-border-radius: 0;
            border-radius: 0; }
        .thumbnail p:not(button) {
            color: #999999;
            font-size: 14px; }
        .thumbnail h3 {
            font-weight: bold;
            font-size: 17px; }

        .thumbnail > img, .thumbnail a > img {
            margin-right: auto;
            margin-left: auto;
        }


        .img-responsive, .thumbnail > img, .thumbnail a > img, .carousel-inner > .item > img, .carousel-inner > .item > a > img {
            display: block;
            max-width: 100%;
            height: auto;
        }

        .thumbnail {
            display: block;
            padding: 4px;
            margin-bottom: 20px;
            line-height: 1.42857143;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 4px;
            -webkit-transition: border .2s ease-in-out;
            -o-transition: border .2s ease-in-out;
            transition: border .2s ease-in-out;
        }
        .thumbnail .caption {
            padding: 9px;
            color: #333;
        }

        .nav-sidebar .nav-treeview {
            margin: 10px;
        }

        /* loading image progress  ================================== */
        #progress-wrp {
            border: 1px solid #0099CC;
            padding: 1px;
            position: relative;
            height: 30px;
            border-radius: 3px;
            margin: 10px;
            text-align: left;
            background: #fff;
            box-shadow: inset 1px 3px 6px rgba(0, 0, 0, 0.12);
        }

        #progress-wrp .progress-bar {
            height: 100%;
            border-radius: 3px;
            background-color: #f39ac7;
            width: 0;
            box-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.11);
        }

        #progress-wrp .status {
            top: 3px;
            left: 50%;
            position: absolute;
            display: inline-block;
            color: #000000;
        }
    </style>
</head>
<body class="hold-transition sidebar-mini layout-fixed">
{% block body %}
    <div class="wrapper">
        <!-- Navbar -->
        {% block navbar %}{% endblock %}
        <!-- /.navbar -->

        <!-- Main Sidebar Container -->
        {% block sidebar %}{% endblock %}
        <!-- /.sidebar -->

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">

            <!-- Content Header (Page header) -->
            {% block content_header %}{% endblock %}
            <!-- /.content-header -->

            <!-- Main content -->
            {% block content_main %}{% endblock %}
            <!-- /.content -->

        </div>
        <!-- /.content-wrapper -->
        <footer class="main-footer">
            <strong>Copyright &copy; 2019-2020 <a href="https://daticash.com">DatiCash System</a>.</strong>
            All rights reserved.
            <div class="float-right d-none d-sm-inline-block">
                <b>Version</b> 1.0.0
            </div>
        </footer>
    </div>
    <!-- ./wrapper -->

{% endblock body %}

<!-- jQuery -->
<script src="{{ asset('adminLTE/plugins/jquery/jquery.min.js') }}"></script>
<!-- jQuery UI 1.11.4 -->
<script src="{{ asset('adminLTE/plugins/jquery-ui/jquery-ui.min.js') }}"></script>
<!-- Select2 -->
<script src="{{ asset('adminLTE/plugins/select2/js/select2.full.min.js') }}"></script>
<!-- Bootstrap4 Duallistbox -->
<script src="{{ asset('adminLTE/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js') }}"></script>
<!-- waitMe -->
<script src="{{ asset('assets/js/waitMe-gh-pages/waitMe.min.js') }}"></script>

<!-- Format Currency -->
<script src="{{ asset('assets/js/formatCurrency/jquery.formatCurrency-1.4.0.js') }}"></script>

<!-- Bootstrap Notify Plugin Js -->
<script src="{{ asset('adminLTE/plugins/bootstrap-notify/bootstrap-notify.js') }}"></script>

<!-- Bootstrap 4 -->
<script src="{{ asset('adminLTE/plugins/bootstrap/js/bootstrap.bundle.min.js') }}"></script>
<!-- InputMask -->
<script src="{{ asset('adminLTE/plugins/moment/moment.min.js') }}"></script>
<!-- date-range-picker -->
<script src="{{ asset('adminLTE/plugins/daterangepicker/daterangepicker.js') }}"></script>
<!-- Waves Effect Plugin Js -->
<script src="{{ asset('adminLTE/plugins/node-waves/waves.js') }}"></script>
<!-- DataTables -->
<script src="{{ asset('adminLTE/plugins/datatables/jquery.dataTables.min.js') }}"></script>
<script src="{{ asset('adminLTE/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js') }}"></script>
<script src="{{ asset('adminLTE/plugins/datatables-responsive/js/dataTables.responsive.min.js') }}"></script>
<script src="{{ asset('adminLTE/plugins/datatables-responsive/js/responsive.bootstrap4.min.js') }}"></script>
<!-- AdminLTE App -->
<script src="{{ asset('adminLTE/dist/js/adminlte.js') }}"></script>
<!-- AdminLTE for demo purposes -->
<script src="{{ asset('adminLTE/dist/js/demo.js') }}"></script>
<script src="{{ asset('adminLTE/plugins/ion-rangeslider/js/ion.rangeSlider.js') }}"></script>

{% block javascripts %}{% endblock %}

<script type="text/javascript"><!--
    {#
        $("select").select2();

        $(document).on('click', '.topup_btn', function(){
                        alert("topup activated")
        })
#}
    {% if _profile.id is defined and _profile.id is not empty %}
    {% set _accounts = app.user.accounts %}

    {% for account in _profile.accounts %}
    {% for role in account.roles %}

    {% if role == "ROLE_USER" and account.is_default == 1 %}
    var defaultBasicAccount_id = "{{ account.id }}" ;
    {% endif %}
    {% endfor %}
    {% endfor %}


    $(document).ready(function(){
        /*Textbox Events*/
        var current_effect = $('#waitMe_ex_effect').val();
        var DatiOptItem = {
            set: function($this){
                //alert($($this).attr("data-account_id"))
                //alert($($this).attr("data-account_type"))
                pid = $($this).attr("data-account_id");
                switch(pid) {
                    case "0":// withdraw
                        init.add($($this).attr("data-account_type"));
                        break;
                    default:
                        init.default($this);
                }
            },
            refresh: function(){
                var $this = $('select#application_daticash__account-listbox').find("option[selected]");
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                {% if app.request.get('item') == "application_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}

                var id = "{{ app.request.get('aid') }}";
                $this = $('select#application_daticash__account-listbox').find('option[data-account_id="'+id+'"]');
                {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                {% if app.request.get('item') == "activity_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}

                var id = "{{ app.request.get('aid') }}";
                $this = $('select#activity_daticash__account-listbox').find('option[data-account_id="'+id+'"]');
                {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                {% if app.request.get('item') == "point_of_sale_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}

                var id = "{{ app.request.get('aid') }}";
                $this = $('select#point_of_sale_daticash__account-listbox').find('option[data-account_id="'+id+'"]');
                {% endif %}
                {% endif %}

                switch(pid = $($this).attr("data-account_id")) {
                    case "0":// add
                        init.add();
                        break;
                    default:
                        init.default($this);
                }

            }
        };
        var init = {
            //se connecter au gestionnaire de session puis recuperer l'état de la session
            add: function (account_type){
                switch(account_type.toLowerCase()) {
                    case "application":// add

                        break;
                    case "activity":// add

                        break;
                    case "point_of_sale":// add

                        break;
                    default:

                }

                $('.form-daticash_account_type').remove();

                $('.form-daticash_account').after(
                    '<div class="form-group row form-daticash_account_type">'+
                    '<label for="name" class="col-sm-2 col-form-label">Type</label>'+
                    '<div class="col-sm-10">'+
                    '<select class="swal2-select" style="display: flex; margin: 0; width: 100%;" name="modal_daticash__account_type-listbox" id="modal_daticash__account_type-listbox">'+
                    '<option value="test" disabled="" selected="selected">Please Select </option>'+
                        {% for accountGroup in _accountGroupAll %}
                        {% set var = 0 %}
                        {% for userRight in _profile.roles %}
                        {% if accountGroup.name in userRight %}
                        {% set var = var + 1 %}
                        {% endif %}
                        {% endfor %}
                        {% if var > 0 %}
                    '<option value="{{ accountGroup.name[5:] }}" class="account_type" {% if app.request.get('aid') == "0" and app.request.get('create') is defined and app.request.get('create') == accountGroup.name %} selected="selected"{% endif %}>{{ accountGroup.description }}</option>'+
                        {% endif %}
                        {% endfor %}
                    '</select>'+
                    '</div>'+
                    '</div>'
                );

                $('.account_action_div_btn').empty();
                $('.account_action_div_btn').append('<button type="submit" id="save_account_add_btn" class="btn btn-info float-right">Create</button>');
                $('#name').val("").focus();
                $('#description').val("");
                {#
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "application_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        setTimeout(function(){ $('.nav-link[href^="#application_settings"]').click()}, 100);
                        //$("#icon_add_application").remove();
                        $("#icon_delete_application").remove();
                        $("#icon_edit_application").remove();
                        $(".activity_settings").prop("hidden", true);
                        $(".point_of_sale_settings").prop("hidden", true);
                        $(".webhook_settings").prop("hidden", true);
                    {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "activity_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        setTimeout(function(){ $('.nav-link[href^="#activity_settings"]').click()}, 100);
                        //$("#icon_add_activity").remove();
                        $("#icon_delete_activity").remove();
                        $("#icon_edit_activity").remove();
                        $(".application_settings").prop("hidden", true);
                        $(".point_of_sale_settings").prop("hidden", true);
                        $(".webhook_settings").prop("hidden", true);
                    {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "point_of_sale_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        setTimeout(function(){ $('.nav-link[href^="#point_of_sale_settings"]').click()}, 100);
                        //$("#icon_add_point_of_sale").remove();
                        $("#icon_delete_point_of_sale").remove();
                        $("#icon_edit_point_of_sale").remove();
                        $(".application_settings").prop("hidden", true);
                        $(".activity_settings").prop("hidden", true);
                        $(".webhook_settings").prop("hidden", true);
                    {% endif %}
                {% endif %}
#}
            },

            default: function($this){
                $('.form-daticash_account_type').remove();
                $('.account_action_div_btn').empty();

                $('.account_action_div_btn').append('<button type="submit" id="save_account_delete_btn" class="btn btn-danger float-right">delete</button>');
                $('.account_action_div_btn').append('<button type="submit" id="save_account_change_btn" class="btn btn-info float-right mr-2">Update</button>');

                pid = $($this).attr("data-account_id");
                pname = $($this).attr("data-account_name");
                pdesc = $($this).attr("data-account_description");


                account_type = $($this).attr("data-account_type");
                var elem = $('a[href^="#activity_settings"]');

                $('#name').val(pname);
                $('#description').val(pdesc);

                if(account_type){
                    switch(account_type.toLowerCase()) {
                        case "application":
                            elem = $('a[href^="#application_settings"]');
                            break;
                        case "point_of_sale":
                            elem = $('a[href^="#point_of_sale_settings"]');
                            break;
                        case "activity":
                            elem = $('a[href^="#activity_settings"]');
                            break;
                        default :
                            elem = $('a[href^="#activity_settings"]');
                    }
                }

                if(pid){
                    var elemTop = elem.first().offset().top;
                    $('html,body').animate({
                        scrollTop:elemTop
                    }, "fast");
                }

                $('select#modal_daticash__account-listbox').find('option[selected]').attr("selected", false)
                $('select#modal_daticash__account-listbox').find('option[data-account_id="'+pid+'"]').attr("selected", true)

                //$('select#modal_daticash__account-listbox').trigger("change")

                {#
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "activity_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        elem = $('a[href^="#activity_settings"]');
                    {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "application_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        elem = $('a[href^="#application_settings"]');
                    {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "point_of_sale_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        elem = $('a[href^="#point_of_sale_settings"]');
                    {% endif %}
                {% endif %}

                	if(pid){
                		var elemTop = elem.first().offset().top;
                		$('html,body').animate({
                			scrollTop:elemTop
                		}, "fast");

                	}

                            $('select#application_daticash__account-listbox').find('option[selected]').attr("selected", false)
                            $('select#application_daticash__account-listbox').find('option[data-account_id="'+pid+'"]').attr("selected", true)

                            $('select#activity_daticash__account-listbox').find('option[selected]').attr("selected", false)
                            $('select#activity_daticash__account-listbox').find('option[data-account_id="'+pid+'"]').attr("selected", true)

                            $('select#point_of_sale_daticash__account-listbox').find('option[selected]').attr("selected", false)
                            $('select#point_of_sale_daticash__account-listbox').find('option[data-account_id="'+pid+'"]').attr("selected", true)

                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "application_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        //setTimeout(function(){ $('.nav-link[href^="#application_settings"]').click()}, 100);
                    {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "activity_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        //setTimeout(function(){ $('.nav-link[href^="#activity_settings"]').click()}, 100);
                    {% endif %}
                {% endif %}
                {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
                    {% if app.request.get('item') == "point_of_sale_settings" and app.request.get('aid') is defined and app.request.get('aid') is not empty %}
                        //setTimeout(function(){ $('.nav-link[href^="#point_of_sale_settings"]').click()}, 100);
                    {% endif %}
                {% endif %}

#}

            },

        };


        {#
    {% if app.session.get('requested_url') is defined %}
        var requested_url = "{{ app.session.get('requested_url') }}";
        var requested_url_method = "{{ app.session.get('requested_url_method') }}";
        var requested_url_string = "{{ app.session.get('requested_url_string') }}";
        console.log(requested_url);
        console.log(requested_url_method);
        console.log(requested_url_string);


        if(requested_url_method=="GET"){
    		    var item;var item_value;
    		    var aid;var aid_value;

            {% for key, value in app.session.get('requested_url_data') %}

                {% if key == 'item' %}
                   item = "{{ key }}" ; item_value = "{{ value }}";
                {% endif %}

                {% if key == 'aid' %}
                    aid = "{{ key }}" ; aid_value = "{{ value }}";
                {% endif %}

            {% endfor %}
            console.log(aid);
            console.log(aid_value);
            console.log(item_value);
            if(aid == "aid" && aid_value == 0){
                switch(item_value) {
                    case "application_settings":
                        console.log("aid_value = ");
                        console.log(aid_value);
                          {% for key2, account in _accounts %}
                                  {% if 'ROLE_DEVELOPER' in account.roles %}
                                      $('.btn_dati_create_account_modal[data-account_type="APPLICATION"]').trigger("click");
                                  {% else %}
                                      $('.btn_subscribe_to_afiliate_program[data-value="DEVELOPPER"]').trigger("click");
                                  {% endif %}
                          {% endfor %}

                      break;
                    case "point_of_sale_settings":
                        {% for key2, account in _accounts %}
                                  {% if 'ROLE_BUSINESS' in account.roles %}
                                      $('.btn_dati_create_account_modal[data-account_type="POINT_OF_SALE"]').trigger("click");
                                  {% else %}
                                      $('.btn_subscribe_to_afiliate_program[data-value="BUSINESS"]').trigger("click");
                                  {% endif %}
                        {% endfor %}

                      break;
                    case "activity_settings":
                        {% for key2, account in _accounts %}
                                  {% if 'ROLE_MERCHANT' in account.roles %}
                                      $('.btn_dati_create_account_modal[data-account_type="ACTIVITY"]').trigger("click");
                                  {% else %}
                                      $('.btn_subscribe_to_afiliate_program[data-value="MERCHANT"]').trigger("click");
                                  {% endif %}
                        {% endfor %}

                      break;
                    default :

                  }
            }
        }


    {% endif %}
#}

        {% if app.request.get('item') is defined and app.request.get('item') is not empty %}
        {% if app.request.get('aid') is defined and app.request.get('aid') is not empty and app.request.get('aid') == 0 %}

        var _iTimer;

        switch("{{ app.request.get('item') }}") {
            case "application_settings":
            {% for key2, account in _accounts %}
            {% if 'ROLE_DEVELOPER' in account.roles %}
                //$('.btn_dati_create_account_modal[data-account_type="APPLICATION"]').trigger("click");
                $('#become_CD_account').trigger("click");
                _iTimer = setTimeout(function(){$('.btn_dati_create_account_modal[data-account_type="APPLICATION"]').trigger("click");clearTimeout(_iTimer)}, 200);

            {% else %}
                //$('.btn_subscribe_to_afiliate_program[data-value="DEVELOPPER"]').trigger("click");
                $('#become_CD_account').trigger("click");
                _iTimer = setTimeout(function(){$('.btn_subscribe_to_afiliate_program[data-value="DEVELOPPER"]').trigger("click");clearTimeout(_iTimer)}, 200);

            {% endif %}
            {% endfor %}

                break;
            case "point_of_sale_settings":
            {% for key2, account in _accounts %}
            {% if 'ROLE_BUSINESS' in account.roles %}
                //$('.btn_dati_create_account_modal[data-account_type="POINT_OF_SALE"]').trigger("click");
                $('#become_CD_account').trigger("click");
                _iTimer = setTimeout(function(){$('.btn_dati_create_account_modal[data-account_type="POINT_OF_SALE"]').trigger("click");clearTimeout(_iTimer)}, 200);

            {% else %}
                //$('.btn_subscribe_to_afiliate_program[data-value="BUSINESS"]').trigger("click");
                $('#become_CD_account').trigger("click");
                _iTimer = setTimeout(function(){$('.btn_subscribe_to_afiliate_program[data-value="BUSINESS"]').trigger("click");clearTimeout(_iTimer)}, 200);

            {% endif %}
            {% endfor %}

                break;
            case "activity_settings":
            {% for key2, account in _accounts %}
            {% if 'ROLE_MERCHANT' in account.roles %}
                //$('.btn_dati_create_account_modal[data-account_type="ACTIVITY"]').trigger("click");
                $('#become_CD_account').trigger("click");
                _iTimer = setTimeout(function(){$('.btn_dati_create_account_modal[data-account_type="ACTIVITY"]').trigger("click");clearTimeout(_iTimer)}, 200);

            {% else %}
                //$('.btn_subscribe_to_afiliate_program[data-value="MERCHANT"]').trigger("click");
                $('#become_CD_account').trigger("click");
                _iTimer = setTimeout(function(){$('.btn_subscribe_to_afiliate_program[data-value="MERCHANT"]').trigger("click");clearTimeout(_iTimer)}, 200);

            {% endif %}
            {% endfor %}

                break;
            default :

        }
        {% endif %}
        {% endif %}

        $("body")
            .on('click', '.btn_subscribe_to_afiliate_program' , function(e) {
                e.preventDefault();
                var $btn = $(this);
                var pid = $btn.attr("data-value");

                var apiResource;

                var hrefCondition;
                var confirmButtonText;
                var successMessage;
                var alreadyMessage;
                var failedMessage;

                switch(pid.toLowerCase()) {
                    case "developer":
                        apiResource = "application";//application/for submit subscription type
                        hrefCondition ="#";//Href to a conditon to be Developer
                        successMessage = 'Welcome to Daticash Program.' +
                            '<br>You are now a affiliated Developer.To take full advantage of your privilege, Create your <a href="settings?item=point_of_sale_setting&aid=0&create=ROLE_DEVELOPER" class="topup_btn"><b>First Application</b></a>';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Create New APPLICATION!';
                        alreadyMessage = "You are already Developer no need to subscribe again";//Message to show if your are already subscribe to this program
                        break;

                    case "merchant":
                        apiResource = "merchant-activity";//merchant-activity/for submit subscription type
                        hrefCondition ="#";//Href to a conditon to be Merchant
                        successMessage = 'Welcome to Daticash Program.' +
                            '<br>You are now a affiliated Merchant.To take full advantage of your privilege, Create your <a href="settings?item=point_of_sale_setting&aid=0&create=ROLE_MERCHANT" class="topup_btn"><b>First Merchant Activity</b></a>';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Create New ACTIVITY!'
                        alreadyMessage = "You are already Merchant no need to subscribe again";//Message to show if your are already subscribe to this program
                        break;

                    case "business":
                        apiResource = "point-of-sale";//point-of-sale/for submit subscription type
                        hrefCondition ="#";//Href to a conditon to be Daticash Agent
                        successMessage = 'Welcome to Daticash Program.' +
                            '<br>You are now a Daticash Agent.To take full advantage of your privilege, Create your <a href="settings?item=point_of_sale_setting&aid=0&create=ROLE_BUSINESS" class="topup_btn"><b>First Point of Sale</b></a>';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Create New POINT OF SALE!';
                        alreadyMessage = "You are already DatiCash Agent no need to subscribe again";//Message to show if your are already subscribe to this program
                        break;

                    default :

                }


                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn swal2-btn btn-info',
                        cancelButton: 'btn swal2-btn btn-default'
                    },
                    buttonsStyling: false
                });


                $btn.text("Processing...").prop("disabled", true);
                //estimate subscription affiliate account
                var estimate_subscription_affiliate_account = '{{ path("estimate_subscription_affiliate_account", {'type':'type'}) }}';
                estimate_subscription_affiliate_account = estimate_subscription_affiliate_account.replace("type", apiResource);

                //fetch(estimate_subscription_affiliate_account, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                fetch(`https://api.daticash.com/v1/api/${apiResource}/estimate-subscription`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                    .then(
                        function(response) {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                                response.json().then(function(data) {
                                    console.log(data);
                                })
                            }else{
                                //Action successfully
                                response.json().then(function(data) {
                                    console.log(data);
                                    if(data.subscription_fees){
                                        var user_id="{{ _profile.id }}";
                                        var confirm_code = "";
                                        //data.subscription_fees = 18; //for test
                                        if(data.subscription_fees > 0){
                                            swalWithBootstrapButtons.fire({
                                                title: 'Alert!',
                                                html: 'Becoming a DatiCash partner, will cost you '+ data.subscription_fees + data.currency +
                                                '<br>A code will sent to your by phone number to confirm your join if you <a href="'+ hrefCondition +'" target="_blank" class="topup_btn"><b>accept the conditions</b></a>',
                                                icon: 'warning',
                                                showCancelButton: true,
                                                confirmButtonColor: '#3085d6',
                                                cancelButtonColor: '#d33',
                                                confirmButtonText: 'Yes, join program!',
                                                showLoaderOnConfirm: true,
                                                preConfirm: () => {
                                                //generate_confirm_code
                                                var generate_confirm_code = '{{ path("generate_confirm_code", {'id':'defaultBasicAccount_id'}) }}';
                                            generate_confirm_code = generate_confirm_code.replace("defaultBasicAccount_id", defaultBasicAccount_id);

                                            return fetch(generate_confirm_code+"?by=MAIL", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                                            //return fetch(`https://api.daticash.com/v1/api/account/${user_id}/generate-confirm-code?by=MAIL`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"} )//confirm-password url //for test
                                                .then(response => {
                                                if (!response.ok) {
                                                throw new Error(response.statusText)
                                            }
                                            return response.json()
                                        })
                                        .catch(error => {
                                                swalWithBootstrapButtons.showValidationMessage(
                                                `Request error: ${error}`
                                            )
                                        })
                                        },
                                        }).then((result) => {
                                                if (result.value) {
                                                console.log(result)
                                                $btn.prop("disabled", false);
                                                swalWithBootstrapButtons.fire({
                                                    title: "Confirm!",
                                                    html: 'Enter the receive SMS code to confirm your subscription:'+
                                                    '<br><h6>If your not receive the code by sms, check your whatapp account or email or <a href="#" id="generate-confirm-code" class=""><b>click here</b></a> to request a new code.</h6>',
                                                    input: "text",
                                                    //closeOnConfirm: true,
                                                    inputPlaceholder: "SMS Code",
                                                    inputAttributes: {
                                                        autocapitalize: "off"
                                                    },
                                                    showCancelButton: false,
                                                    showLoaderOnConfirm: true,
                                                    focusConfirm: false,
                                                    confirmButtonText:'<i class="fa fa-thumbs-up"></i> Confirm',
                                                    confirmButtonAriaLabel: "Thumbs up, great!",
                                                    cancelButtonText:'<i class="fa fa-thumbs-down"></i>',
                                                    cancelButtonAriaLabel: "Thumbs down",
                                                    preConfirm: (confirm_code) => {
                                                    //subscribe_affiliate_account
                                                    var subscribe_affiliate_account = '{{ path("subscribe_affiliate_account", {'id':'user_id','type':'apiResource' }) }}';
                                                subscribe_affiliate_account = subscribe_affiliate_account.replace("apiResource", apiResource);
                                                subscribe_affiliate_account = subscribe_affiliate_account.replace("user_id", user_id);

                                                //return fetch(`${subscribe_affiliate_account}?confirm_code=${confirm_code}`, {"method": "POST", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                                                return fetch(`https://api.daticash.com/v1/api/${apiResource}/user/${id}/subscribe?user_id=${user_id}confirm_code=${confirm_code}`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "POST"} )//confirm-password url //for test
                                                    .then(response => {
                                                    if (!response.ok) {
                                                    throw new Error(response.statusText)
                                                }
                                                return response.json()
                                            })
                                            .catch(error => {
                                                    swalWithBootstrapButtons.showValidationMessage(
                                                    `The confirm code given is wrong.`
                                                )
                                            })
                                            },
                                                allowOutsideClick: () => !swalWithBootstrapButtons.isLoading()
                                            }).then((data) => {
                                                    console.log(data)
                                                if (data.value.message) { // for test
                                                    $('.login-feedback').html(show_alert('success', "Succefully Created", 1));
                                                    scroll_to_(".navbar");
                                                    swalWithBootstrapButtons.fire({
                                                        title: 'Great!',
                                                        html: successMessage,
                                                        icon: 'success',
                                                        showCancelButton: true,
                                                        focusConfirm: true,
                                                        confirmButtonText: confirmButtonText,
                                                        confirmButtonAriaLabel: 'Yes, Create!',
                                                    }).then((result) => {
                                                        if (result.value) {

                                                        var item;
                                                        var data_role;
                                                        switch(pid.toLowerCase()) {
                                                            case "developer"://Action error
                                                                item = "APPLICATION";
                                                                data_role ="DEVELOPER";
                                                                title = "Add new Application";
                                                                btnText = "ADD NEW APPLICATION";
                                                                alreadyMsg = "You are now Developer";
                                                                break;
                                                            case "merchant"://Action error
                                                                item = "ACTIVITY";
                                                                data_role ="MERCHANT";
                                                                title = "Add new Merchant Activity";
                                                                btnText = "ADD NEW ACTIVITY";
                                                                alreadyMsg = "You are now a Merchant";
                                                                break;
                                                            case "business"://Action error
                                                                item = "POINT_OF_SALE";
                                                                data_role ="BUSINESS";
                                                                title = "Add new point of sale";
                                                                btnText = "FIRST BUSINESS";
                                                                alreadyMsg = "Your are now Daticash Agent";
                                                                break;

                                                        }
                                                        fetch("{{ path("user_refresh") }}/{{ _profile.id }}", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//user_refresh
                                                        $('.btn_subscribe_to_afiliate_program[data-value="'+data_role+'"]').after('<a href="#" data-account_type="'+item+'" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="'+title+'" >'+btnText+'</a>')
                                                        $('h3[data-role="'+data_role+'"]').text(alreadyMsg);
                                                        $('.btn_dati_create_account_modal[data-account_type="'+item+'"]').trigger("click");
                                                    }
                                                })
                                                }else{
                                                    dQS_submitSubscriptionToAprogram(data.value.code, confirmButtonText, successMessage, alreadyMessage);
                                                }

                                            })

                                            }else{
                                                $btn.prop("disabled", false);
                                            }

                                        })

                                        }else{

                                            if(data.subscription_fees == 0){
                                                //create_account
                                                //subscribe_affiliate_account
                                                var subscribe_affiliate_account = '{{ path("subscribe_affiliate_account", {'id':'user_id','type':'apiResource' }) }}';
                                                subscribe_affiliate_account = subscribe_affiliate_account.replace("apiResource", apiResource);
                                                subscribe_affiliate_account = subscribe_affiliate_account.replace("user_id", user_id);

                                                //return fetch(subscribe_affiliate_account, {"method": "POST", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                                                return fetch(`https://api.daticash.com/v1/api/${apiResource}/user/${user_id}/subscribe`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "POST"} )//confirm-password url //for test
                                                    .then(response => {
                                                    if (!response.ok) {
                                                    response.json().then(function(data) {
                                                        console.log(data);
                                                        throw new Error(response.statusText)
                                                    })
                                                }else{
                                                    response.json().then(function(data) {
                                                        console.log(data);
                                                        //code=200; //for test
                                                        if (data.message) { // for test
                                                            $('.login-feedback').html(show_alert('success', "Succefully Created", 1));
                                                            scroll_to_(".navbar");
                                                            swalWithBootstrapButtons.fire({
                                                                title: 'Great!',
                                                                html: successMessage,
                                                                icon: 'success',
                                                                showCancelButton: true,
                                                                focusConfirm: true,
                                                                confirmButtonText: confirmButtonText,
                                                                confirmButtonAriaLabel: 'Yes, Create!',
                                                            }).then((result) => {
                                                                if (result.value) {
                                                                var item;
                                                                var data_role;
                                                                switch(pid.toLowerCase()) {
                                                                    case "developer"://Action error
                                                                        item = "APPLICATION";
                                                                        data_role ="DEVELOPER";
                                                                        title = "Add new Application";
                                                                        btnText = "ADD NEW APPLICATION";
                                                                        alreadyMsg = "You are now Developer";
                                                                        break;
                                                                    case "merchant"://Action error
                                                                        item = "ACTIVITY";
                                                                        data_role ="MERCHANT";
                                                                        title = "Add new Merchant Activity";
                                                                        btnText = "ADD NEW ACTIVITY";
                                                                        alreadyMsg = "You are now a Merchant";
                                                                        break;
                                                                    case "business"://Action error
                                                                        item = "POINT_OF_SALE";
                                                                        data_role ="BUSINESS";
                                                                        title = "Add new point of sale";
                                                                        btnText = "FIRST BUSINESS";
                                                                        alreadyMsg = "Your are now Daticash Agent";
                                                                        break;

                                                                }
                                                                fetch("{{ path("user_refresh") }}/{{ _profile.id }}", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//user_refresh
                                                                $('.btn_subscribe_to_afiliate_program[data-value="'+data_role+'"]').after('<a href="#" data-account_type="'+item+'" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="'+title+'" >'+btnText+'</a>')
                                                                $('h3[data-role="'+data_role+'"]').text(alreadyMsg);
                                                                $('.btn_dati_create_account_modal[data-account_type="'+item+'"]').trigger("click");

                                                            }
                                                        })
                                                        }else{
                                                            dQS_submitSubscriptionToAprogram(data.code, confirmButtonText, successMessage, alreadyMessage);
                                                        }
                                                    })
                                                }
                                            })
                                            .catch(error => {
                                                    swalWithBootstrapButtons.showValidationMessage(
                                                    `Request failed: ${error}`
                                                )
                                            })
                                                $btn.text("SUBSCRIBE").prop("disabled", false);
                                            }else{
                                                $btn.text("SUBSCRIBE").prop("disabled", false);
                                                swalWithBootstrapButtons.fire(
                                                    "ERROR!",
                                                    "Ressource not found.",
                                                    "error"
                                                )
                                            }
                                        }
                                    }else{
                                        $btn.text("SUBSCRIBE").prop("disabled", false);
                                        console.log()
                                        switch(data.code) {
                                            case 400:
                                                swalWithBootstrapButtons.fire(
                                                    "ERROR!",
                                                    "Something is wrong with the request, possibly missing or improperly formatted parameter.",
                                                    "error"
                                                )

                                                break;
                                            default :
                                                $btn.text("SUBSCRIBE").prop("disabled", false);
                                                swalWithBootstrapButtons.fire(
                                                    "ERROR REQUEST!",
                                                    "Request computed failed",
                                                    "error"
                                                )
                                        }
                                    }

                                })

                            }
                        }).catch(error => {console.log(`${error}`)});
            })
            /*Tab Highlighter Functionality*/
            .on('change', 'select#modal_daticash__account_type-listbox' , function(e) {
                $(this).removeClass("input-error");
            })
            .on('change', 'select#modal_daticash__account-listbox', function(e){
                var $this = $(this).find("option:selected");
                DatiOptItem.set($this);
            })

            .on('click', '#save_account_change_btn' , function(e) {
                e.preventDefault();
                var $btn = $(this);
                var name = $("#name").val();
                var description = $("#description").val();
                var $this = $('select#modal_daticash__account-listbox').find("option:selected");
                var pid = $($this).attr("data-account_id");
                $('#save_account_change_btn').text("Processing...").prop("disabled", true);
                $('#save_account_delete_btn').prop("disabled", true);

                var refpid = $($this).attr("data-account_type");
                var apiResource;

                var hrefCondition;
                var confirmButtonText;
                var successMessage;
                var alreadyMessage;
                var failedMessage;
                var confirmHref;

                switch(refpid.toLowerCase()) {
                    case "application":
                        apiResource = "application";//application/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Application.To configure it now click on "Setting It" now, or later by accessing the "applications" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Setting It!';
                        alreadyMessage = "You are already Developer no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=application_setting&aid=0&create=ROLE_DEVELOPER";
                        break;

                    case "activity":
                        apiResource = "merchant-activity";//merchant-activity/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Activity.To configure it now click on "Setting It" now, or later by accessing the "activities" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Create New ACTIVITY!'
                        alreadyMessage = "You are already Merchant no need to subscribe again";
                        confirmHref = '<a href="#" data-account_type="ACTIVITY" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="Add new Merchant Activity" >ADD NEW ACTIVITY</a>';

                        break;

                    case "point_of_sale":
                        apiResource = "point-of-sale";//point-of-sale/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Point of sale.To configure it now click on "Setting It" now, or later by accessing the "Point of sale" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Setting It!';
                        alreadyMessage = "You are already DatiCash Agent no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=point_of_sale_setting&aid=0&create=ROLE_BUSINESS";
                        break;

                    default :

                }

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn swal2-btn btn-info',
                        cancelButton: 'btn swal2-btn btn-default'
                    },
                    buttonsStyling: false
                });


                //edit_account.
                var edit_affiliate_account = '{{ path("edit_affiliate_account", {'type':'type','id':'id'}) }}';
                edit_affiliate_account = edit_affiliate_account.replace("type", apiResource);
                edit_affiliate_account = edit_affiliate_account.replace("id", pid);

                //fetch(edit_affiliate_account, {"method": "POST", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                fetch(`https://api.daticash.com/v1/api/${apiResource}/${pid}/edit?name=${name}&description=${description}`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "PUT"})//check status url //for test
                    .then(
                        function(response) {
                            if (!response.ok) {
                                console.log("application response after confirm code submit = ");
                                console.log(response);
                            }else{
                                console.log("api response after confirm code submit = ");
                                console.log(response);

                                // Examine the text in the response
                                response.json().then(function(data) {
                                    console.log("api response after submit  = " + data);
                                    $("#dati_create_account_modal").modal("hide");
                                    if(data.id){//activation reussi
                                        $('.login-feedback').html(show_alert('success', "Succefully updated", 1));
                                        scroll_to_(".navbar");
                                        fetch("{{ path("user_refresh") }}/{{ _profile.id }}", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//user_refresh
                                        switch(refpid.toLowerCase()) {
                                            case "application":
                                                $('.nav-link[href^="#application_settings"]').trigger("click");
                                                break;
                                            case "activity":
                                                $('.nav-link[href^="#activity_settings"]').trigger("click");
                                                break;
                                            case "point_of_sale":
                                                $('.nav-link[href^="#point_of_sale_settings"]').trigger("click");
                                                break;
                                        }
                                        $('#save_account_change_btn').text("Update").prop("disabled", false);
                                        $('#save_account_delete_btn').prop("disabled", false);
                                    }else{
                                        console.log()
                                        switch(data.code) {

                                            case 202:
                                                $('.login-feedback').append('<div class="alert alert-success alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspSuccefully updated.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                break;

                                            case 400:
                                                $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspSomething is wrong with the request, possibly missing or improperly formatted parameter<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                break;
                                            case 403:
                                                $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspAccess denied; have not permission to do this action.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                break;
                                            case 409:
                                                $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspThe account account with the same name existe.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                break;
                                            default :
                                                $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbsp Error Connection<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                        }scroll_to_(".navbar");
                                    }
                                    $('#save_account_change_btn').text("Update").prop("disabled", false);
                                    $('#save_account_delete_btn').prop("disabled", false);

                                })
                            }

                        })


            })
            .on('click', '#save_account_add_btn' , function(e) {
                e.preventDefault();
                var $btn = $(this);
                var $this = $('select#modal_daticash__account_type-listbox').find("option:selected");

                var pid = $($this).attr("value");
                var apiResource;

                var hrefCondition;
                var confirmButtonText;
                var successMessage;
                var alreadyMessage;
                var failedMessage;
                var confirmHref;

                switch(pid.toLowerCase()) {
                    case "developer":
                        apiResource = "application";//application/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Application.To configure it now click on "Setting It" now, or later by accessing the "applications" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Setting It!';
                        alreadyMessage = "You are already Developer no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=application_setting&aid=0&create=ROLE_DEVELOPER";
                        break;

                    case "merchant":
                        apiResource = "merchant-activity";//merchant-activity/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Activity.To configure it now click on "Setting It" now, or later by accessing the "activities" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Create New ACTIVITY!'
                        alreadyMessage = "You are already Merchant no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=activity_setting&aid=0&create=ROLE_MERCHANT";
                        break;

                    case "business":
                        apiResource = "point-of-sale";//point-of-sale/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Point of sale.To configure it now click on "Setting It" now, or later by accessing the "Point of sale" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Setting It!';
                        alreadyMessage = "You are already DatiCash Agent no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=point_of_sale_setting&aid=0&create=ROLE_BUSINESS";
                        break;

                    default :

                }

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn swal2-btn btn-info',
                        cancelButton: 'btn swal2-btn btn-default'
                    },
                    buttonsStyling: false
                });

                if(pid !== "" && $("#name").val() !== "" && $("#description").val() !== ""){
                    $btn.text("Processing...").prop("disabled", true);
                    //estimate add account
                    var estimate_creation_affiliate_account = '{{ path("estimate_creation_affiliate_account", {'type':'type'}) }}';
                    estimate_creation_affiliate_account = estimate_creation_affiliate_account.replace("type", apiResource);

                    fetch(estimate_creation_affiliate_account, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                    //fetch(`https://api.daticash.com/v1/api/${apiResource}/estimate-creation`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                        .then(
                            function(response) {
                                if (!response.ok) {
                                    throw new Error(response.statusText)
                                    response.json().then(function(data) {
                                        console.log(data);
                                    })
                                }else{
                                    //Action successfully
                                    response.json().then(function(data) {
                                        console.log(data);
                                        var confirm_code = "";
                                        //data.monthy_fees = 0; //for test
                                        if(data.registration_fees > 0 || data.monthy_fees > 0){
                                            swalWithBootstrapButtons.fire({
                                                title: 'Alert!',
                                                html: 'Creating account, will cost you '+ data.registration_fees + data.currency +
                                                '<br>A code will sent to your by phone number to confirm your join if you <a href="'+ hrefCondition +'" target="_blank" class="topup_btn"><b>accept the conditions</b></a>',
                                                icon: 'warning',
                                                showCancelButton: true,
                                                confirmButtonColor: '#3085d6',
                                                cancelButtonColor: '#d33',
                                                confirmButtonText: 'Yes, do it!',
                                                showLoaderOnConfirm: true,
                                                preConfirm: () => {
                                                //generate_confirm_code
                                                var generate_confirm_code = '{{ path("generate_confirm_code", {'id':'defaultBasicAccount_id'}) }}';
                                            generate_confirm_code = generate_confirm_code.replace("defaultBasicAccount_id", defaultBasicAccount_id);

                                            return fetch(generate_confirm_code+"?by=MAIL", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                                            //return fetch(`https://api.daticash.com/v1/api/account/${defaultBasicAccount_id}/generate-confirm-code?by=MAIL`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"} )//confirm-password url //for test
                                                .then(response => {
                                                if (!response.ok) {
                                                throw new Error(response.statusText)
                                            }
                                            return response.json()
                                        })
                                        .catch(error => {
                                                swalWithBootstrapButtons.showValidationMessage(
                                                `Request error: ${error}`
                                            )
                                        })
                                        },
                                        }).then((result) => {
                                                if (result.value) {
                                                console.log(result)
                                                $btn.prop("disabled", false);
                                                swalWithBootstrapButtons.fire({
                                                    title: "Confirm!",
                                                    html: 'Enter the receive SMS code to confirm creation:'+
                                                    '<br><h6>If your not receive the code by sms, check your whatapp account or email or <a href="#" id="generate-confirm-code" class=""><b>click here</b></a> to request a new code.</h6>',
                                                    input: "text",
                                                    //closeOnConfirm: true,
                                                    inputPlaceholder: "SMS Code",
                                                    inputAttributes: {
                                                        autocapitalize: "off"
                                                    },
                                                    showCancelButton: false,
                                                    showLoaderOnConfirm: true,
                                                    focusConfirm: false,
                                                    confirmButtonText:'<i class="fa fa-thumbs-up"></i> Confirm',
                                                    confirmButtonAriaLabel: "Thumbs up, great!",
                                                    cancelButtonText:'<i class="fa fa-thumbs-down"></i>',
                                                    cancelButtonAriaLabel: "Thumbs down",
                                                    preConfirm: (confirm_code) => {
                                                    var user_id="{{ _profile.id }}";
                                                var name = $("#name").val();
                                                var description = $("#description").val();
                                                //new_affiliate_account
                                                var new_affiliate_account = '{{ path("new_affiliate_account", {'type':'apiResource' }) }}';
                                                new_affiliate_account = new_affiliate_account.replace("apiResource", apiResource);

                                                //return fetch(`${new_affiliate_account}?user_id=${user_id}&role=${pid}&name=${name}&description=${description}&confirm_code=${confirm_code}`, {"method": "POST", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                                                return fetch(`https://api.daticash.com/v1/api/${apiResource}/new?user_id=${user_id}&role=${pid}&name=${name}&description=${description}&confirm_code=${confirm_code}`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "POST"} )//confirm-password url //for test
                                                    .then(response => {
                                                    if (!response.ok) {
                                                    throw new Error(response.statusText)
                                                }
                                                return response.json()
                                            })
                                            .catch(error => {
                                                    swalWithBootstrapButtons.showValidationMessage(
                                                    `The confirm code given is wrong.`
                                                )
                                            })
                                            },
                                                allowOutsideClick: () => !swalWithBootstrapButtons.isLoading()
                                            }).then((data) => {
                                                    console.log(data)
                                                if (data.value.id) { // for test
                                                    swalWithBootstrapButtons.fire({
                                                        title: 'Great!',
                                                        html: successMessage,
                                                        icon: 'success',
                                                        showCancelButton: true,
                                                        focusConfirm: true,
                                                        confirmButtonText: confirmButtonText,
                                                        confirmButtonAriaLabel: 'Setting now!',
                                                    }).then((result) => {
                                                        console.log(result)
                                                    if (result.value) {
                                                        var item;
                                                        switch(pid.toLowerCase()) {
                                                            case "developer"://Action error
                                                                item = "application_settings";
                                                                break;
                                                            case "merchant"://Action error
                                                                item = "activity_settings";
                                                                break;
                                                            case "business"://Action error
                                                                item = "point_of_sale_settings";
                                                                break;

                                                        }
                                                        fetch("{{ path("user_refresh") }}/{{ _profile.id }}", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//user_refresh
                                                        window.location = "{{ path('accounts') }}?item="+item+"&aid="+data.value.id;
                                                    }
                                                })
                                                }else{
                                                    dQS_submitCreateAccountToAprogram(data.code, data.id, pid, confirmButtonText, successMessage, failedMessage, alreadyMessage);
                                                }

                                            })

                                            }else{
                                                $btn.prop("disabled", false);
                                            }

                                        })

                                        }else{
                                            if(data.monthy_fees == 0){
                                                //create_account
                                                //new_affiliate_account
                                                var user_id="{{ _profile.id }}";
                                                var name = $("#name").val();
                                                var description = $("#description").val();
                                                var new_affiliate_account = '{{ path("new_affiliate_account", {'type':'apiResource' }) }}';
                                                new_affiliate_account = new_affiliate_account.replace("apiResource", apiResource);

                                                //return fetch(`${new_affiliate_account}?user_id=${user_id}&role=${pid}&name=${name}&description=${description}`, {"method": "POST", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                                                return fetch(`https://api.daticash.com/v1/api/${apiResource}/new?user_id=${user_id}&role=${pid}&name=${name}&description=${description}`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "POST"} )//confirm-password url //for test
                                                    .then(response => {
                                                    if (!response.ok) {
                                                    response.json().then(function(data) {
                                                        console.log(data);
                                                        throw new Error(response.statusText)
                                                    })
                                                }else{
                                                    response.json().then(function(data) {
                                                        console.log(data);
                                                        //data.code=400; //for test
                                                        //dQS_submitCreateAccountToAprogram(data.code, data.id, pid, confirmButtonText, successMessage, failedMessage, alreadyMessage);
                                                        if (data.id) { // for test
                                                            swalWithBootstrapButtons.fire({
                                                                title: 'Great!',
                                                                html: successMessage,
                                                                icon: 'success',
                                                                showCancelButton: true,
                                                                focusConfirm: true,
                                                                confirmButtonText: confirmButtonText,
                                                                confirmButtonAriaLabel: 'Setting now!',
                                                            }).then((result) => {
                                                                console.log(result)
                                                            if (result.value) {
                                                                var item;
                                                                switch(pid.toLowerCase()) {
                                                                    case "developer"://Action error
                                                                        item = "application_settings";
                                                                        break;
                                                                    case "merchant"://Action error
                                                                        item = "activity_settings";
                                                                        break;
                                                                    case "business"://Action error
                                                                        item = "point_of_sale_settings";
                                                                        break;

                                                                }
                                                                fetch("{{ path("user_refresh") }}/{{ _profile.id }}", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//user_refresh
                                                                window.location = "{{ path('accounts') }}?item="+item+"&aid="+data.id;
                                                            }
                                                        })
                                                        }else{
                                                            dQS_submitCreateAccountToAprogram(data.code, data.id, pid, confirmButtonText, successMessage, failedMessage, alreadyMessage);
                                                        }

                                                    })
                                                }
                                            })
                                            .catch(error => {
                                                    swalWithBootstrapButtons.showValidationMessage(
                                                    `Request failed: ${error}`
                                                )
                                            })
                                                $btn.text("Create").prop("disabled", false);
                                            }else{
                                                $btn.text("Create").prop("disabled", false);
                                                swalWithBootstrapButtons.fire(
                                                    "ERROR!",
                                                    "Ressource not found.",
                                                    "error"
                                                )
                                            }
                                        }

                                    })
                                }
                            }).catch(error => {console.log(`${error}`)});
//......../..  pid !== "" && $("#name").val() !== "" && $("#description").val() !== ""---------------------------------------------------------------------------------------------------------------------------------------
                }else{
                    if($("#name").val() === ""){
                        $('#modal_account_name-feedback').html("<div class='text-danger'>Invalid name</div>");
                    }

                    if($("#description").val() === ""){
                        $('#modal_account_description-feedback').html("<div class='text-danger'>Invalid description</div>");
                    }

                    if(pid === ""){
                        $("#modal_daticash__account_type-listbox").addClass("input-error");
                    }
                }
            })
            .on('click', '#save_account_delete_btn' , function(e) {
                e.preventDefault();
                var $btn = $(this);
                var name = $("#name").val();
                var description = $("#description").val();
                var $this = $('select#modal_daticash__account-listbox').find("option:selected");
                var pid = $($this).attr("data-account_id");
                $('#save_account_delete_btn').text("Processing...").prop("disabled", true);
                $('#save_account_change_btn').prop("disabled", true);


                var refpid = $($this).attr("data-account_type");
                var apiResource;

                var hrefCondition;
                var confirmButtonText;
                var successMessage;
                var alreadyMessage;
                var failedMessage;
                var confirmHref;

                switch(refpid.toLowerCase()) {
                    case "application":
                        apiResource = "application";//application/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Application.To configure it now click on "Setting It" now, or later by accessing the "applications" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Setting It!';
                        alreadyMessage = "You are already Developer no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=application_setting&aid=0&create=ROLE_DEVELOPER";
                        break;

                    case "activity":
                        apiResource = "merchant-activity";//merchant-activity/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Activity.To configure it now click on "Setting It" now, or later by accessing the "activities" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Create New ACTIVITY!'
                        alreadyMessage = "You are already Merchant no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=activity_setting&aid=0&create=ROLE_MERCHANT";
                        break;

                    case "point_of_sale":
                        apiResource = "point-of-sale";//point-of-sale/
                        hrefCondition ="#";
                        successMessage = 'Thank you for your.' +
                            '<br>You have now a new Point of sale.To configure it now click on "Setting It" now, or later by accessing the "Point of sale" tab of the "accounts" menu of your dashboard';
                        confirmButtonText = '<i class="fa fa-thumbs-up"></i> Setting It!';
                        alreadyMessage = "You are already DatiCash Agent no need to subscribe again";
                        confirmHref = "{{ path('accounts') }}?item=point_of_sale_setting&aid=0&create=ROLE_BUSINESS";
                        break;

                    default :

                }

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn swal2-btn btn-info',
                        cancelButton: 'btn swal2-btn btn-default'
                    },
                    buttonsStyling: false
                });


                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.value) {
                    //delete_account
                    {#
                   var delete_account = '{{ path("delete_account", {'type':'type','id':'id'}) }}';
                        delete_account = delete_account.replace("type", apiResource);
                        delete_account = delete_account.replace("id", pid);
                    #}
                    //fetch(delete_account, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                    fetch(`https://api.daticash.com/v1/api/${apiResource}/${pid}/delete`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "DELETE"})//check status url //for test
                        .then(
                            function(response) {
                                if (!response.ok) {
                                    console.log("application response after confirm code submit = ");
                                    console.log(response);
                                }else{
                                    console.log("api response after confirm code submit = ");
                                    console.log(response);
                                    // Examine the text in the response
                                    response.json().then(function(data) {
                                        console.log("api response after submit  = " + data);
                                        $("#dati_create_account_modal").modal("hide");
                                        if(data.message){//activation reussi
                                            $('.login-feedback').html(show_alert('success', "Account successfully deleted.", 1));
                                            scroll_to_(".navbar");
                                            fetch("{{ path("user_refresh") }}/{{ _profile.id }}", {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//user_refresh
                                            switch(refpid.toLowerCase()) {
                                                case "application":
                                                    $('.nav-link[href^="#application_settings"]').trigger("click");
                                                    break;
                                                case "activity":
                                                    $('.nav-link[href^="#activity_settings"]').trigger("click");
                                                    break;
                                                case "point_of_sale":
                                                    $('.nav-link[href^="#point_of_sale_settings"]').trigger("click");
                                                    break;
                                            }
                                            $('#save_account_delete_btn').text("Delete").prop("disabled", false);
                                            $('#save_account_change_btn').prop("disabled", false);
                                        }else{
                                            switch(data.code) {
                                                case 202:
                                                    $('.login-feedback').append('<div class="alert alert-success alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspaccount successfully deleted.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                    break;
                                                case 400:
                                                    $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspSomething is wrong with the request, possibly missing or improperly formatted parameter.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                    break;
                                                case 403:
                                                    $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspused ApiKey owner does not have permission to access this resource.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                    break;
                                                case 412:
                                                    $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbspThe account has been mark_as_deleted[archived] rather than being deleted.<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                                    break;
                                                default :
                                                    $('.login-feedback').append('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbsp Error Connection<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                                            }scroll_to_(".navbar");
                                        }
                                        $('#save_account_delete_btn').text("Delete").prop("disabled", false);
                                        $('#save_account_change_btn').prop("disabled", false);

                                    })
                                }
                            })
                }
            })
            })
            .on('focus', 'input, textarea' , function() {
                //$(".alert").remove()
                $(".text-danger").remove()
            })
            .on('click', '.btn_dati_create_account_modal' , function() {
                $('.form-daticash_account_type').remove();
                $("#modal_subscribe_to_afiliate_program").modal("hide");
                switch(pid = $(this).attr("data-account_type").toLowerCase()) {
                    case "application":// add
                        $('.form-daticash_account').after(
                            '<div class="form-group row form-daticash_account_type">'+
                            '<label for="name" class="col-sm-2 col-form-label">Type</label>'+
                            '<div class="col-sm-10">'+
                            '<select class="swal2-select" style="display: flex; margin: 0; width: 100%;" name="modal_daticash__account_type-listbox" id="modal_daticash__account_type-listbox">'+
                            '<option value="DEVELOPER" selected="selected">Application </option>'+
                            '</select>'+
                            '</div>'+
                            '</div>'
                        );
                        break;
                    case "activity":// add
                        $('.form-daticash_account').after(
                            '<div class="form-group row form-daticash_account_type">'+
                            '<label for="name" class="col-sm-2 col-form-label">Type</label>'+
                            '<div class="col-sm-10">'+
                            '<select class="swal2-select" style="display: flex; margin: 0; width: 100%;" name="modal_daticash__account_type-listbox" id="modal_daticash__account_type-listbox">'+
                            '<option value="MERCHANT" selected="selected">Activity </option>'+
                            '</select>'+
                            '</div>'+
                            '</div>'
                        );
                        break;
                    case "point_of_sale":// add
                        $('.form-daticash_account').after(
                            '<div class="form-group row form-daticash_account_type">'+
                            '<label for="name" class="col-sm-2 col-form-label">Type</label>'+
                            '<div class="col-sm-10">'+
                            '<select class="swal2-select" style="display: flex; margin: 0; width: 100%;" name="modal_daticash__account_type-listbox" id="modal_daticash__account_type-listbox">'+
                            '<option value="BUSINESS" selected="selected">Point Of Sale </option>'+
                            '</select>'+
                            '</div>'+
                            '</div>'
                        );
                        break;
                    default:
                        $('.form-daticash_account').after(
                            '<div class="form-group row form-daticash_account_type">'+
                            '<label for="name" class="col-sm-2 col-form-label">Type</label>'+
                            '<div class="col-sm-10">'+
                            '<select class="swal2-select" style="display: flex; margin: 0; width: 100%;" name="modal_daticash__account_type-listbox" id="modal_daticash__account_type-listbox">'+
                            '<option value="BASIC" selected="selected">Basic </option>'+
                            '</select>'+
                            '</div>'+
                            '</div>'
                        );
                }

                $('.account_action_div_btn').empty();
                $('.account_action_div_btn').append('<button type="submit" id="save_account_add_btn" class="btn btn-info float-right">Create</button>');
                $('#name').val("").focus();
                $('#description').val("");

                $('#modal_daticash__account-listbox').prop("disabled", true);
                $('#modal_daticash__account_type-listbox').prop("disabled", true);

            })

            .on('change', 'select#application_daticash__account-listbox', function(e){
                run_waitMe($('#card_application_linked_activities .card-body'), 1, current_effect);

                e.stopPropagation();
                var $this = $(this).find("option:selected");
                var aid = $($this).attr("data-account_id");
                var list_data = "";

                DatiOptItem.set($this);

                $("#input_id_application_apikey").val("");

                if(aid == 0){
                    {#
                    $("#div_icon_delete_application").empty();
                    $("#div_icon_edit_application").empty();
                    #}
                    $("#div_icon_action_application").empty().append(
                        '<div class="col-sm-12 mb-12">'+
                        '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_add_application" id="icon_add_application">'+
                        '<i class="fas fa-plus-square"></i>'+
                        ' Add'+
                        '</a>'+
                        '</div>'
                    );

                    list_data = list_data + (
                        '<!-- if confirm required -->'+
                    '<div class="callout callout-warning">'+
                    '<h5>Notice!</h5>'+
                    '<p>Select an Application to manage the linked activities.</p>'+
                    '</div>'
                );
                    $("#card_application_linked_activities .card-body .external-events").empty().append(list_data);
                    $('#card_application_linked_activities .card-body').waitMe("hide");

                }else{
                    $("#div_icon_action_application").empty().append(
                        '<div class="col-sm-12 mb-12">'+
                        '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_edit_application" id="icon_edit_application">'+
                        '<i class="fas fa-edit"></i>'+
                        ' Edit'+
                        '</a>'+
                        '<a href="#" class="ml-4" style="color: #dc3545!important" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_delete_application" id="icon_delete_application">'+
                        '<i class="fas fa-trash-alt"></i>'+
                        ' Delete'+
                        '</a>'+
                        '</div>'
                    );
                    {#
                    $("#div_icon_delete_application").empty().append(
                                                    '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_delete_application" id="icon_delete_application">'+
                                                        '<i class="fas fa-trash-alt"></i>'+
                                                        'Delete'+
                                                    '</a>'
                                                    );
                    $("#div_icon_edit_application").empty().append(
                                                    '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_edit_application" id="icon_edit_application">'+
                                                        '<i class="fas fa-edit"></i>'+
                                                        'Edit'+
                                                    '</a>'
                                                    );
                    #}

                    $("#input_id_application_apikey").empty().val(aid);
                    //request the liked object for application
                    {#
                    var list_linked_activities = '{{ path("list_linked_activities", {'type':'apiResource','id':'user_id'}) }}';
                        list_linked_activities = list_linked_activities.replace("apiResource", "application");
                        list_linked_activities = list_linked_activities.replace("user_id", "{{ _profile.id }}");
                    #}
                    //fetch(`${list_linked_activities}`, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                    fetch(`https://api.daticash.com/v1/api/application/user/{{ _profile.id }}/list`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                        .then(response => {
                        if (!response.ok) {
                        response.json().then(function(applications) {
                            console.log(applications);
                            throw new Error(response.statusText)
                        })
                    }else{
                        response.json().then(function(applications) {
                            console.log(applications)
                            if (applications) { // for test
                                console.log(applications);
                                //alert("datbase= "+applications[p].id)//for test
                                //alert("local= "+aid)//for test
                                // parcourir la table des liens 1
                                $("#card_application_linked_activities .card-body .external-events").empty();
                                list_data = '';
                                for (p in applications) {
                                    //alert("for"+p +"= "+ applications[p].id)//for test
                                    if(applications[p].id == aid){
                                        console.log(applications[p]);
                                        for (q in applications[p].link_2) {
                                            //alert(applications[p].link_2[q].linkedMerchantActivity.name)
                                            line_data = '';
                                            line_data = line_data + (
                                                '<div class="card card-outline card-info collapsed-card">'+
                                                '<div class="card-header">'+
                                                '<h3 class="card-title">'+
                                                applications[p].link_2[q].linkedMerchantActivity.name+
                                                '<small>'+applications[p].link_2[q].linkedMerchantActivity.description+'</small>'+
                                                '</h3>'+
                                                '<!-- tools box -->'+
                                            '<div class="card-tools">'+
                                            '<button type="button" class="btn btn-tool btn-sm" title="Earnings made by this account">'+
                                            '<span class="badge badge-info float-right">0.00<sup style="font-size: 10px">'+applications[p].link_2[q].linkedMerchantActivity.currency+'</sup></span></button>'+
                                            '<button type="button" class="btn btn-tool btn-sm" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">'+
                                            '<i class="fas fa-plus"></i></button>'+
                                            '<button type="button" class="btn btn-tool btn-sm" data-card-widget="remove" data-toggle="tooltip" title="Unlink" id="unlink">'+
                                            '<i class="fas fa-times"></i></button>'+
                                            '</div>'+
                                            '<!-- /. tools -->'+
                                            '</div>'+
                                            '<!-- /.card-header -->'+
                                            '<div class="card-body pad" style="display: none;">'
                                        );

                                            if(applications[p].link_2[q].is_enabled == false){
                                                const regex = /info/gi;
                                                line_data = line_data.replace(regex, 'warning');
                                            }

                                            if(applications[p].link_2[q].is_enabled == false){
                                                line_data = line_data + (
                                                    '<!-- if confirm required -->'+
                                                '<div class="callout callout-warning">'+
                                                '<h5>I Need a confirmation!</h5>'+
                                                '<p>This alert is whowing if the Marchant of this account have not accept your linking.</p>'+
                                                '</div>'
                                            );
                                            }else{
                                                line_data = line_data + (
                                                    '<div class="form-group row">'+
                                                    '<label class="col-sm-2 col-form-label">Business Key</label>'+
                                                    '<div class="user-block">'+
                                                    '<img class="profile-user-img img-bordered-sm" src="{{ asset('assets/img/qrcode.png') }}" alt="user image">'+
                                                    '<span class="username">'+
                                                    '<a href="#" class="profile-user-label">Generate new</a>'+
                                                    '</span>'+
                                                    '<span class="description">'+applications[p].link_2[q].id+'</span>'+
                                                    '</div>'+
                                                    '</div>'
                                                );
                                            }
                                            line_data = line_data + (
                                                '</div>'+
                                                '</div>'
                                            );

                                            if(line_data != ""){
                                                $("#card_application_linked_activities .card-body .external-events").append(line_data);
                                            }

                                            list_data = list_data + line_data;

                                        }
                                        // parcourir la table des liens 1
                                        for (q in applications[p].link_1) {
                                            //alert(applications[p].link_1[q].linkedMerchantActivity.name)
                                            line_data = '';
                                            line_data = line_data + (
                                                '<div class="card card-outline card-info collapsed-card">'+
                                                '<div class="card-header">'+
                                                '<h3 class="card-title">'+
                                                applications[p].link_1[q].linkedMerchantActivity.name+
                                                '<small>'+applications[p].link_1[q].linkedMerchantActivity.description+'</small>'+
                                                '</h3>'+
                                                '<!-- tools box -->'+
                                            '<div class="card-tools">'+
                                            '<button type="button" class="btn btn-tool btn-sm" title="Earnings made by this account">'+
                                            '<span class="badge badge-info float-right">0.00<sup style="font-size: 10px">'+applications[p].link_1[q].linkedMerchantActivity.currency+'</sup></span></button>'+
                                            '<button type="button" class="btn btn-tool btn-sm" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">'+
                                            '<i class="fas fa-plus"></i></button>'+
                                            '<button type="button" class="btn btn-tool btn-sm" data-card-widget="remove" data-toggle="tooltip" title="Unlink" id="unlink">'+
                                            '<i class="fas fa-times"></i></button>'+
                                            '</div>'+
                                            '<!-- /. tools -->'+
                                            '</div>'+
                                            '<!-- /.card-header -->'+
                                            '<div class="card-body pad" style="display: none;">'
                                        );

                                            if(applications[p].link_1[q].is_enabled == false){
                                                const regex = /info/gi;
                                                line_data = line_data.replace(regex, 'warning');
                                            }

                                            if(applications[p].link_1[q].is_enabled == false){
                                                line_data = line_data + (
                                                    '<!-- if confirm required -->'+
                                                '<div class="callout callout-warning">'+
                                                '<h5>I Need a confirmation!</h5>'+
                                                '<p>This alert is whowing if the Marchant of this account have not accept your linking.</p>'+
                                                '</div>'
                                            );
                                            }else{
                                                line_data = line_data + (
                                                    '<div class="form-group row">'+
                                                    '<label class="col-sm-2 col-form-label">Business Key</label>'+
                                                    '<div class="user-block">'+
                                                    '<img class="profile-user-img img-bordered-sm" src="{{ asset('assets/img/qrcode.png') }}" alt="user image">'+
                                                    '<span class="username">'+
                                                    '<a href="#" class="profile-user-label">Generate new</a>'+
                                                    '</span>'+
                                                    '<span class="description">'+applications[p].link_1[q].id+'</span>'+
                                                    '</div>'+
                                                    '</div>'
                                                );
                                            }
                                            line_data = line_data + (
                                                '</div>'+
                                                '</div>'
                                            );

                                            if(line_data != ""){
                                                $("#card_application_linked_activities .card-body .external-events").append(line_data);
                                            }

                                            list_data = list_data + line_data;


                                        }
                                    }
                                }
                                if(list_data == ""){
                                    list_data = list_data + '<h4 style="color: #e9ecef;">No Linked Activities for this Application.</h4>';
                                    $("#card_application_linked_activities .card-body .external-events").append(list_data);
                                }
                                console.log(list_data)
                            }
                            $("#card_application_linked_activities .card-body").waitMe("hide");
                        })
                    }
                })

                }

                //$('select#modal_daticash__account-listbox').find('option[selected]').attr("selected", false)
                //$('select#modal_daticash__account-listbox').find('option[data-account_id="'+pid+'"]').attr("selected", true)

                //$('select#modal_daticash__account-listbox').trigger("change")

            })
            //------------------------------------------------------------------------------
            .on('change', 'select#activity_daticash__account-listbox', function(e){
                run_waitMe($('#card_activity_linked_applications .card-body'), 1, current_effect);

                e.stopPropagation();
                var $this = $(this).find("option:selected");
                var aid = $($this).attr("data-account_id");
                var list_data = "";

                DatiOptItem.set($this);

                $("#input_id_activity_apikey").val("");

                if(aid == 0){
                    {#
                    $("#div_icon_delete_activity").empty();
                    $("#div_icon_edit_activity").empty();
                    #}
                    $("#div_icon_action_activity").empty().append(
                        '<div class="col-sm-12 mb-12">'+
                        '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_add_activity" id="icon_add_activity">'+
                        '<i class="fas fa-plus-square"></i>'+
                        ' Add'+
                        '</a>'+
                        '</div>'
                    );
                    list_data = list_data + (
                        '<!-- if confirm required -->'+
                    '<div class="callout callout-warning">'+
                    '<h5>Notice!</h5>'+
                    '<p>Select an Activity and manage it.</p>'+
                    '</div>'
                );
                    $("#card_activity_linked_applications .card-body .external-events").empty().append(list_data);
                    $('#card_activity_linked_applications .card-body').waitMe("hide");

                }else{
                    {#
                    $("#div_icon_delete_activity").empty().append(
                                                    '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_delete_activity" id="icon_delete_activity">'+
                                                        '<i class="fas fa-trash-alt"></i>'+
                                                        'Delete'+
                                                    '</a>'
                                                    );
                    $("#div_icon_edit_activity").empty().append(
                                                    '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_edit_activity" id="icon_edit_activity">'+
                                                        '<i class="fas fa-edit"></i>'+
                                                        'Edit'+
                                                    '</a>'
                                                    );
                    #}
                    $("#div_icon_action_activity").empty().append(
                        '<div class="col-sm-12 mb-12">'+
                        '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_edit_activity" id="icon_edit_activity">'+
                        '<i class="fas fa-edit"></i>'+
                        ' Edit'+
                        '</a>'+
                        '<a href="#" class="ml-4" style="color: #dc3545!important" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_delete_activity" id="icon_delete_activity">'+
                        '<i class="fas fa-trash-alt"></i>'+
                        ' Delete'+
                        '</a>'+
                        '</div>'
                    );
                    $("#input_id_activity_apikey").empty().val(aid);
                    //request the liked object for activity
                    {#
                    var list_linked_applications = '{{ path("list_linked_applications", {'type':'apiResource','id':'user_id'}) }}';
                        list_linked_applications = list_linked_applications.replace("apiResource", "merchant-activity");
                        list_linked_applications = list_linked_applications.replace("user_id", "{{ _profile.id }}");
                    #}
                    //fetch(`${list_linked_applications}`, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                    fetch(`https://api.daticash.com/v1/api/merchant-activity/user/{{ _profile.id }}/list`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                        .then(response => {
                        if (!response.ok) {
                        response.json().then(function(activities) {
                            console.log(activities);
                            throw new Error(response.statusText)
                        })
                    }else{
                        response.json().then(function(activities) {
                            console.log(activities)
                            if (activities) { // for test
                                console.log(activities);
                                //alert("datbase= "+activities[p].id)//for test
                                //alert("local= "+aid)//for test
                                $("#card_activity_linked_applications .card-body .external-events").empty();
                                list_data ='';
                                for (p in activities) {
                                    var line_data = "";
                                    //alert("for"+p +"= "+ activities[p].id)//for test
                                    if(activities[p].id == aid){
                                        console.log(activities[p]);
                                        for (q in activities[p].link_1) {
                                            line_data = '';
                                            line_data = line_data + (
                                                '<div class="card card-outline card-info collapsed-card">'+
                                                '<div class="card-header">'+
                                                '<h3 class="card-title">'+
                                                activities[p].link_1[q].linkedApplication.name+
                                                '<small>'+activities[p].link_1[q].linkedApplication.description+'</small>'+
                                                '</h3>'+
                                                '<!-- tools box -->'+
                                            '<div class="card-tools">'
                                        );
                                            if(activities[p].link_1[q].is_enabled == false){
                                                line_data = line_data + (
                                                    '<button type="button" class="btn btn-tool btn-sm" title="Click here to authorize link to this application">'+
                                                    '<span class="badge badge-warning float-right"><a href="#" class="btn btn-sm btn-warning float-left a_activity_authorize-link" data-link_id="'+activities[p].link_1[q].id+'" data-link_status="disabled" id="a_activity_authorize-link">Authorize</a></span></button>'
                                                );
                                            }else{
                                                line_data = line_data + (
                                                    '<button type="button" class="btn btn-tool btn-sm" title="Click here to denied link to this application">'+
                                                    '<span class="badge badge-info float-right"><a href="#" class="btn btn-sm btn-info float-left a_activity_authorize-link" data-link_id="'+activities[p].link_1[q].id+'" data-link_status="enabled" id="a_activity_authorize-link">Denied</a></span></button>'
                                                );
                                            }
                                            line_data = line_data + (
                                                '</div>'+
                                                '<!-- /. tools -->'+
                                            '</div>'+
                                            '<!-- /.card-header -->'+
                                            '<div class="card-body pad" style="display: none;">'
                                        );

                                            if(activities[p].link_1[q].is_enabled == false){
                                                const regex = /info/gi;
                                                line_data = line_data.replace(regex, 'warning');
                                            }

                                            if(activities[p].link_1[q].is_enabled == true){
                                                line_data = line_data + (
                                                    '<div class="form-group row">'+
                                                    '<label class="col-sm-2 col-form-label">Business Key</label>'+
                                                    '<div class="user-block">'+
                                                    '<img class="profile-user-img img-bordered-sm" src="{{ asset('assets/img/qrcode.png') }}" alt="user image">'+
                                                    '<span class="username">'+
                                                    '<a href="#" class="profile-user-label">Generate new</a>'+
                                                    '</span>'+
                                                    '<span class="description">'+activities[p].link_1[q].id+'</span>'+
                                                    '</div>'+
                                                    '</div>'
                                                );
                                            }
                                            line_data = line_data + (
                                                '</div>'+
                                                '</div>'
                                            );

                                            if(line_data != ""){
                                                $("#card_activity_linked_applications .card-body .external-events").append(line_data);
                                            }

                                            list_data = list_data + line_data;

                                        }
                                    }


                                }
                                if(list_data == ""){
                                    list_data = list_data + '<h4 style="color: #e9ecef;">No Linked Applications for this Activity.</h4>';
                                    $("#card_activity_linked_applications .card-body .external-events").append(list_data);
                                }
                                console.log(list_data)
                            }
                            $("#card_activity_linked_applications .card-body").waitMe("hide");
                        })
                    }
                })

                }

                //$('select#modal_daticash__account-listbox').find('option[selected]').attr("selected", false)
                //$('select#modal_daticash__account-listbox').find('option[data-account_id="0"]').attr("selected", true)

                //$('select#modal_daticash__account-listbox').trigger("change")

                //$('select#modal_daticash__account_type-listbox').find('option[selected]').attr("selected", false)
                //$('select#modal_daticash__account_type-listbox').find('option[data-account_type="ACTIVITY"]').attr("selected", true)

                //$('select#modal_daticash__account_type-listbox').trigger("change")

            })
            //------------------------------------------------------------------------------
            .on('change', 'select#webhook_daticash__account-listbox', function(e){
                run_waitMe($('#webhook_settings'), 1, current_effect);

                e.stopPropagation();
                var $this = $(this).find("option:selected");
                var aid = $($this).attr("data-account_id");
                var list_data = "";

                DatiOptItem.set($this);

                $("#input_id_application_apikey").val("");
                $("#imput_webhook_callback_url").val("");
                $("#imput_webhook_description").val("");
                $("#imput_webhook_description").val("");
                $("#input_id_linked_activity").val("");
                $("#btn_webhook_add_or_test_event").empty();
                $("#btn_webhook_confirm_field").empty()

                $("#div_icon_action_application").empty().append(
                    '<div class="col-sm-12 mb-12">'+
                    '<a href="#" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_edit_application" id="icon_edit_application">'+
                    '<i class="fas fa-edit"></i>'+
                    ' Edit'+
                    '</a>'+
                    '<a href="#" class="ml-4" style="color: #dc3545!important" data-toggle="modal" data-target="#dati_create_account_modal" name="icon_delete_application" id="icon_delete_application">'+
                    '<i class="fas fa-trash-alt"></i>'+
                    ' Delete'+
                    '</a>'+
                    '</div>'
                );

                // save current application id selected
                var $this = $('select#webhook_daticash__account-listbox').find("option:selected");
                var curent_application_id_selected = $($this).attr("data-account_id");

                //replace the current list by the generate updated list
                {#
                    var list_affiliate_account = '{{ path("list_affiliate_account", {'type':'apiResource','id':'user_id'}) }}';
                        list_affiliate_account = list_affiliate_account.replace("apiResource", "application");
                        list_affiliate_account = list_affiliate_account.replace("user_id", "{{ _profile.id }}");
                    #}
                //fetch(`${list_affiliate_account}`, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                fetch(`https://api.daticash.com/v1/api/application/user/{{ _profile.id }}/list`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                    .then(response => {
                    if (!response.ok) {
                    response.json().then(function(applications) {
                        console.log(applications);
                        throw new Error(response.statusText)
                    })
                }else{
                    response.json().then(function(applications) {
                        console.log(applications)
                        if (applications) { // S'il existe au moin une application
                            console.log(applications);
                            select_list_data = (
                                '<option style="color:#17a2b8;" data-account_type="LINKED-ACTIVITY" data-account_name="Linked Activity" data-account_description ="Link with Application and Activity"  data-account_id ="0" value="0" class="nav-link"> Please Select</option>'+
                                '<optgroup style="color:gray;" label="My Linked Activities">'
                            );
                            card_list_data = ('<input id="0" type="hidden" class="account-name" >');
                            content_selected_list_data= "";


                            for (p in applications) {
                                if(applications[p].id){//s'il ya au mons un lien
                                    if(applications[p].link_2.length != 0){//s'il ya au mons un lien
                                        for (q in applications[p].link_2) {//on parcour les liens
                                            if(applications[p].link_2[q].id){//on s'assure de l'existance du lien
                                                if(applications[p].link_2[q].id == curent_application_id_selected){//On vérifie si le lien en cour est egale au lien selectionné précedemant
                                                    select_list_data = select_list_data + (
                                                        '<option style="color:#17a2b8;" data-account_type="LINKED-ACTIVITY" data-account_name="'+applications[p].name+' =|= '+applications[p].link_2[q].linkedMerchantActivity.name+'" data-account_description="'+applications[p].description+' =|= '+applications[p].link_2[q].linkedMerchantActivity.description+'"  data-account_id="'+applications[p].link_2[q].id+'" value="'+applications[p].link_2[q].id+'" class="nav-link" selected>'+applications[p].name+' =|= '+applications[p].link_2[q].linkedMerchantActivity.name+'</option>'
                                                    );

                                                    $("#input_id_linked_activity").val(applications[p].link_2[q].id)

                                                    if (applications[p].link_2[q].webhook_endpoint){//si un endpoint existe
                                                        $("#imput_webhook_id_webhook").val(applications[p].link_2[q].webhook_endpoint.id)
                                                        $("#imput_webhook_callback_url").val(applications[p].link_2[q].webhook_endpoint.callback_url)
                                                        $("#imput_webhook_description").val(applications[p].link_2[q].webhook_endpoint.description)

                                                        if (applications[p].link_2[q].webhook_endpoint.is_enabled == true){
                                                            $("#div_icon_status_webhook").empty().append(
                                                                '<div class="col-sm-12 mb-12">'+
                                                                '<span style="color: #28a745!important"><i class="far fa-dot-circle"></i> Is activated</span>'+
                                                                '<a href="#" class="ml-4" name="icon_webhook_status_webhook" id="icon_webhook_status_webhook" data-webhook_status="enabled" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'">'+
                                                                '<i class="fas fa-power-off"></i>'+
                                                                ' Desactivate Now'+
                                                                '</a>'+
                                                                '<a href="#" class="ml-4" name="icon_webhook_metadata_webhook" id="icon_webhook_metadata_webhook" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'" title="You can insert values here as you wish which will be returned to you during the webhook event notification.">'+
                                                                '<i class="fas fa-table"></i>'+
                                                                ' Metadata'+
                                                                '</a>'+
                                                                '</div>'
                                                            );

                                                            $("#btn_webhook_confirm_field").empty().append(
                                                                '<button type="submit" id="btn_webhook_update_webhook" class="btn btn-info float-right mr-2" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'">Update</button>'
                                                            );
                                                            $("#btn_webhook_add_or_test_event").empty().append(
                                                                '<button id="btn_webhook_add_event" type="button" class="btn btn-info mr-2" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'">Listen</button>'+
                                                                '<button id="btn_webhook_test_event" type="button" class="btn btn-default">Test</button>'
                                                            );

                                                        }else{
                                                            $("#div_icon_status_webhook").empty().append(
                                                                '<div class="col-sm-12 mb-12">'+
                                                                '<span style="color: #dc3545!important"><i class="far fa-dot-circle"></i> Is not activated</span>'+
                                                                '<a href="#" class="ml-4" name="icon_webhook_status_webhook" id="icon_webhook_status_webhook" data-webhook_status="disaabled" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'">'+
                                                                '<i class="fas fa-power-off"></i>'+
                                                                ' Activate Now'+
                                                                '</a>'+
                                                                '</div>'
                                                            );

                                                            $("#btn_webhook_confirm_field").empty().append(
                                                                '<button type="submit" id="btn_webhook_update_webhook" class="btn btn-info float-right mr-2" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'">Update</button>'
                                                            );

                                                            $("#btn_webhook_add_or_test_event").empty().append(
                                                                '<button id="btn_webhook_add_event" type="button" class="btn btn-info mr-2" data-webhook_id="'+applications[p].link_2[q].webhook_endpoint.id+'">Listen</button>'+
                                                                '<button id="btn_webhook_test_event" type="button" class="btn btn-default">Test</button>'
                                                            );
                                                        }

                                                        var select_list_event_associated = "";

                                                        for (t in applications[p].link_2[q].webhook_endpoint.events){
                                                            select_list_event_associated = select_list_event_associated + (
                                                                '<div class="col-md-12">'+
                                                                '<div class="card card-primary collapsed-card">'+
                                                                '<div class="card-header">'+
                                                                '<h3 class="card-title">'+applications[p].link_2[q].webhook_endpoint.events[t]+'</h3>'+
                                                                '<div class="card-tools">'+
                                                                '<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">'+
                                                                '<i class="fas fa-plus"></i></button>'+
                                                                '</div>'+
                                                                '</div>'+
                                                                '<div class="card-body" style="display: none;">'+
                                                                'Description: '+applications[p].link_2[q].webhook_endpoint.events[t]+
                                                                '</div>'+
                                                                '</div>'+
                                                                '</div>'
                                                            );
                                                        }
                                                        console.log("list event associated")
                                                        console.log(select_list_event_associated)
                                                        if (select_list_event_associated == ""){
                                                            list_data = list_data + (
                                                                '<!-- if confirm required -->'+
                                                            '<div class="callout callout-warning">'+
                                                            '<h5>Notice!</h5>'+
                                                            '<p>You can test or add events here.</p>'+
                                                            '</div>'
                                                        );
                                                            $("#card_webhook_event_associated .card-body .external-events").empty().append(list_data);
                                                        }else{
                                                            $("#card_webhook_event_associated .card-body .external-events").empty().append(select_list_event_associated);
                                                        }
                                                    }else{
                                                        $("#div_icon_status_webhook").empty().append(
                                                            '<div class="col-sm-12 mb-12">'+
                                                            '<span style="color: #ffc107!important"><i class="far fa-dot-circle"></i> Not registered</span>'+
                                                            ' (To Register, fill the field and click to register)'+
                                                            '</div>'

                                                        );

                                                        $("#btn_webhook_confirm_field").empty().append(
                                                            '<button type="submit" id="btn_webhook_register_webhook" class="btn btn-info float-right">Register</button>'
                                                        );


                                                        $("#btn_webhook_add_or_test_event").empty();

                                                    }

                                                }else{
                                                    select_list_data = select_list_data + (
                                                        '<option style="color:#17a2b8;" data-account_type="LINKED-ACTIVITY" data-account_name="'+applications[p].name+' =|= '+applications[p].link_2[q].linkedMerchantActivity.name+'" data-account_description="'+applications[p].description+' =|= '+applications[p].link_2[q].linkedMerchantActivity.description+'"  data-account_id="'+applications[p].link_2[q].id+'" value="'+applications[p].link_2[q].id+'" class="nav-link">'+applications[p].name+' =|= '+applications[p].link_2[q].linkedMerchantActivity.name+'</option>'
                                                    );

                                                }
                                                card_list_data = card_list_data + (
                                                    '<li class="item">'+
                                                    '<div class="product-img">'+
                                                    '<img src="/public/adminLTE/dist/img/default-150x150.png" alt="Product Image" class="img-size-50">'+
                                                    '</div>'+
                                                    '<div class="product-info">'+
                                                    '<a data-account_id="'+applications[p].link_2[q].id+'" data-account_name="'+applications[p].name+' =|= '+applications[p].link_2[q].linkedMerchantActivity.name+'" data-account_description="'+applications[p].description+' =|= '+applications[p].link_2[q].linkedMerchantActivity.description+'" href="javascript:void(0)" class="account-name">'+applications[p].name+' =|= '+applications[p].link_2[q].linkedMerchantActivity.name+'</a>'+
                                                    '<span class="product-description">'+
                                                    applications[p].description+' =|= '+applications[p].link_2[q].linkedMerchantActivity.description+
                                                    '</span>'+
                                                    '</div>'+
                                                    '</li>'
                                                );
                                            }else{
                                                select_list_data = select_list_data + (
                                                    '<option data-account_type="LINKED-ACTIVITY" data-account_id="" value="" disabled="" >Empty</option>'
                                                );

                                                card_list_data = card_list_data + (
                                                    '<h4 style="color: #e9ecef;">No Linked Activities.</h4>'
                                                );

                                                $("#div_icon_status_webhook").empty().append(
                                                    '<div class="col-sm-12 mb-3">'+
                                                    '<span style="color: #dc3545!important"><i class="far fa-dot-circle"></i> You do not link any application to a merchant activity</span>'+
                                                    '<a href="/accounts?item=application_settings" class="product-title"> Link now</a>'+
                                                    '</div>'

                                                );

                                            }
                                        }
                                    }else{
                                        select_list_data = select_list_data + (
                                            '<option data-account_type="LINKED-ACTIVITY" data-account_id="" value="" disabled="" >Empty</option>'
                                        );

                                        card_list_data = card_list_data + (
                                            '<h4 style="color: #e9ecef;">No Linked Activities.</h4>'
                                        );

                                        $("#div_icon_status_webhook").empty().append(
                                            '<div class="col-sm-12 mb-3">'+
                                            '<span style="color: #dc3545!important"><i class="far fa-dot-circle"></i> You do not link any application to a merchant activity</span>'+
                                            '<a href="/accounts?item=application_settings&aid=0" class="product-title"> Link now</a>'+
                                            '</div>'
                                        );
                                    }

                                }else{//S'il ya aucun lien
                                    select_list_data = select_list_data + (
                                        '<option data-account_type="LINKED-ACTIVITY" data-account_id="" value="" disabled="" >Empty</option>'
                                    );

                                    card_list_data = card_list_data + (
                                        '<h4 style="color: #e9ecef;">No Linked Activities.</h4>'
                                    );

                                    $("#div_icon_status_webhook").empty().append(
                                        '<div class="col-sm-12 mb-3">'+
                                        '<span style="color: #dc3545!important"><i class="far fa-dot-circle"></i> To register an Endpoint, you must create at least one application and link it to at least one activity.</span>'+
                                        '<a href="#" data-account_type="APPLICATION" data-toggle="modal" data-target="#dati_create_account_modal" class="btn_dati_create_account_modal" role="button" title="Add new Application" >ADD NEW APPLICATION NOW</a>'+
                                        '</div>'
                                    );
                                }
                                $("#ul__account_list").empty().append(card_list_data);


                            }
                            $("#webhook_daticash__account-listbox").empty().append(select_list_data);
                            console.log(select_list_data)
                        }

                    })
                }
                $("#webhook_settings").waitMe("hide");
            })

                //fetch(`${list_webhook_events}`, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                fetch(`https://api.daticash.com/v1/api/webhook/events`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                    .then(response => {
                    if (!response.ok) {
                    response.json().then(function(applications) {
                        console.log(applications);
                        throw new Error(response.statusText)
                    })
                }else{
                    response.json().then(function(list_events) {
                        console.log(list_events)
                        if (list_events) { // for test
                            console.log(list_events);
                            select_list_events = "";

                            for (p in list_events) {
                                select_list_events = select_list_events + ('<option style="color:#17a2b8;" value="'+list_events[p]+'">'+list_events[p]+'</option>');
                            }
                            $("#webhook_daticash__events-listbox").empty().append(select_list_events);
                            console.log(select_list_events)
                        }

                    })
                }
            })

                if(aid == 0){
                    $("#div_icon_status_webhook").empty();
                    list_data = list_data + (
                        '<!-- if confirm required -->'+
                    '<div class="callout callout-warning">'+
                    '<h5>Notice!</h5>'+
                    '<p>Select the linked activity and add Endpoint to listening Events.</p>'+
                    '</div>'
                );
                    $("#card_webhook_event_associated .card-body .external-events").empty().append(list_data);
                }
                //$('select#modal_daticash__account-listbox').find('option[selected]').attr("selected", false)
                //$('select#modal_daticash__account-listbox').find('option[data-account_id="'+pid+'"]').attr("selected", true)

                //$('select#modal_daticash__account-listbox').trigger("change")

            })
            //------------------------------------------------------------------------------
            .on('change', 'select#service_daticash__account-listbox', function(e){
                run_waitMe($('#service_selected_service-content'), 1, current_effect);

                e.stopPropagation();
                var $this = $(this).find("option:selected");
                var sid = $($this).attr("data-service_id");
                var list_data = "";

                DatiOptItem.set($this);

                $("#imput_service_description").val("");

                if(sid == 0){
                    $("#div_icon_action_service").empty().append(
                        '<div class="col-sm-12 mb-12">'+
                        '<a href="#" data-toggle="modal" data-target="#dati_create_service_modal" name="icon_add_service" id="icon_add_service">'+
                        '<i class="fas fa-plus-square"></i>'+
                        ' Add'+
                        '</a>'+
                        '</div>'
                    );
                    list_data = list_data + (
                        '<!-- if confirm required -->'+
                    '<div class="callout callout-warning">'+
                    '<h5>Notice!</h5>'+
                    '<p>Select a Service to manage it.</p>'+
                    '</div>'
                );
                    $("#service_selected_service-content").empty().append(list_data);
                    $('#service_selected_service-content').waitMe("hide");

                }else{
                    $("#div_icon_action_service").empty().append(
                        '<div class="col-sm-12 mb-12">'+
                        '<a href="#" data-toggle="modal" data-target="#dati_create_service_modal" name="icon_edit_service" id="icon_edit_service">'+
                        '<i class="fas fa-edit"></i>'+
                        ' Edit'+
                        '</a>'+
                        '<a href="#" class="ml-4" style="color: #dc3545!important" data-toggle="modal" data-target="#dati_create_service_modal" name="icon_delete_service" id="icon_delete_service">'+
                        '<i class="fas fa-trash-alt"></i>'+
                        ' Delete'+
                        '</a>'+
                        '</div>'
                    );

                    //request the liked object for activity
                    {#
                    var service_payment_service_list = '{{ path("service_payment_service_list", {'service_id':'service_id'}) }}';
                        service_payment_service_list = service_payment_service_list.replace("service_id", sid);
                    #}
                    var list_data = '';
                    var stat_data = '';
                    //fetch(`${service_payment_service_list}`, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
                    fetch(`https://api.daticash.com/v1/api/payment-service/${sid}/view`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
                        .then(response => {
                        if (!response.ok) {
                        //throw new Error(response.statusText)
                        response.json().then(function(detail) {
                            console.log(detail);
                            $('.login-feedback').html(show_alert('error', response.status+': ' + response.statusText+' ('+detail.code+': ' + detail.message+')' , 1));
                            scroll_to_(".navbar");
                        })
                        list_data = list_data + (
                            '<!-- if confirm required -->'+
                        '<div class="callout callout-warning">'+
                        '<h5>Notice!</h5>'+
                        '<p>Select a Service to manage it.</p>'+
                        '</div>'
                    );
                        $("#service_selected_service-content").empty().append(list_data);


                    }else{
                        response.json().then(function(service) {
                            console.log(service)
                            if (service) { // for test
                                console.log(service);
                                //alert("datbase= "+participants[p].id)//for test
                                //alert("local= "+sid)//for test
                                $("#service_selected_service-content").empty();

                                list_data = list_data + (
                                    '<div class="form-group row">'+
                                    '<div class="col-sm-12">'+
                                    '<div class="row">'+
                                    '<div class="col-12">'+
                                    '<div class="card-header">'+
                                    '<h4 class="card-title">Participiants list</h4>'+
                                    '<div class="card-tools">'+
                                    '<button type="button" class="btn btn-tool">'+
                                    '<a class="btn btn-info btn-sm" href="#" id="participiant_add_btn">'+
                                    '<i class="fas fa-plus"></i>'+
                                    '&nbsp;Add New Participiant'+
                                    '</a>'+
                                    '</button>' +
                                    '</div>'+
                                    '</div>'
                                )

                                line_data = '';
                                line_data = line_data + (
                                    '<div class="card-body">'+
                                    '<div class="external-events">'	+
                                    '<table id="participiant_list" class="table table-bordered table-striped">'+
                                    '<thead>'+
                                    '<tr>'+
                                    '<th>Phone Number</th>'+
                                    '<th>First Name</th>'+
                                    '<th>Last Name</th>'+
                                    '<th></th>'+
                                    '</tr>'+
                                    '</thead>'+
                                    '<tbody>'
                                );
                                for (p in service.participants) {
                                    //alert("for"+p +"= "+ participants[p].id)//for test
                                    line_data = line_data + (
                                        '<tr>'+
                                        '<td>'+service.participants[p].phone+'</td>'+
                                        '<td>'+service.participants[p].firstname+'</td>'+
                                        '<td>'+service.participants[p].lastname+'</td>'+
                                        '<td>'+
                                        '<a class="btn btn-defauult btn-sm participiant_edit_btn" href="#"'+
                                        'data-participiant_id = "'+service.participants[p].id+'" data-toggle="modal" data-target="#dati_create_participiant_modal"'+
                                        'data-participiant_phone = "'+service.participants[p].phone+'"'+
                                        'data-participiant_firstname = "'+service.participants[p].firstname+'"'+
                                        'data-participiant_lastname = "'+service.participants[p].lastname+'"'+
                                        'data-participiant_middle_name = "'+service.participants[p].middle_name+'"'+
                                        '>'+
                                        '<i class="fas fa-edit"></i>'+
                                        '&nbsp;Edit'+
                                        '</a>'+

                                        '<a class="btn btn-defauult btn-sm entity_add_btn" href="#"'+
                                        'data-participiant_id = "'+service.participants[p].id+'" data-toggle="modal" data-target="#dati_create_entity_modal"'+
                                        '>'+
                                        '<i class="fas fa-plus"></i>'+
                                        '&nbsp;Add entity'+
                                        '</a>'+

                                        '</td>'+
                                        '</tr>'
                                    );
                                }

                                line_data = line_data + (
                                    '</tbody>'+
                                    '</table>'+
                                    '</div>'+
                                    '</div>'
                                );

                                list_data = list_data + line_data + (

                                    '</div>'+
                                    '</div>'+
                                    '</div>'+
                                    '</div>'
                                );

                                stat_data = stat_data + (
                                    '<div class="card mt-2 mb-2" id="row_pricing_preview" style="padding: 24px 40px;">'+
                                    '<div class="card-body p-1 m-0 font-weight-bold">'+
                                    '<div class="float-left text-success">STATISTICS</div>'+
                                    '<div class="float-right">'+
                                    '<span id="span_mannuel_convert">'+
                                    '<img id="mannuel_convert" src="{{ asset('assets/img/fleches.png') }}" style="position: relative;width: 20px; cursor: pointer;max-height: 50px;" title="Click here to actualise the pricing" />'+
                                    '</span>'+
                                    '</div>'+
                                    '</div>'+
                                    '<div class="card-body p-1 m-0 font-weight-bold">'+
                                    '<div class="float-left">Total participiants</div>'+
                                    '<div class="float-right"><span id="span_total_participiants">'+service.number_of_participants+'</span></div>'+
                                    '</div>'+
                                    '<div class="card-body p-1 m-0 font-weight-bold">'+
                                    '<div class="float-left">Total contribution</div>'+
                                    '<div class="float-right"><span id="span_amount_received_currency">{{ app.user.currency_code }}</span>&nbsp;<span id="span_total_countribution">0.0</span></div>'+
                                    '</div>'+
                                    '</div>'
                                );

                                $("#service_selected_service-content").append(list_data);
                                $(".service_label").empty().append(service.label);
                                $(".service_description").empty().append(service.description);
                                $("#sevice_selected_statistic").empty().append(stat_data);



                                if( service.logo !== null ){
                                    $("#col_service_logo").empty().append(
                                        '<a href="javascript:void(0);" class="thumbnail service-user-img">'+
                                        '<img src="'+service.logo+'" class="img-responsive" style="max-height: 300px;">'+
                                        '<span class="details text-center loading">Click here to update Logo </span>'+
                                        '</a>'
                                    );
                                }else{
                                    $("#col_service_logo").empty().append(
                                        '<a href="javascript:void(0);" class="thumbnail service-user-img">'+
                                        '<img src="http://placehold.it/500x300" class="img-responsive" style="max-height: 300px;">'+
                                        '<span class="details text-center loading">Click here to Add Logo </span>'+
                                        '</a>'
                                    );
                                }
                                $('.profile input[type="file"]').attr("data-avatar_for_id", service.id)


                            }
                            if(list_data == ""){
                                list_data = list_data + '<h4 style="color: #e9ecef;">No participiant for this service.</h4>';
                                $("#service_selected_service-content").append(list_data);
                            }
                            console.log(list_data)
                            $(function () {
                                $("#participiant_list").DataTable({
                                    "responsive": true,
                                    "paging": true,
                                    "lengthChange": false,
                                    "searching": false,
                                    "ordering": true,
                                    "order": [[0, "desc"]],
                                    "info": true,
                                    "autoWidth": false,
                                    "responsive": true,
                                });
                            });



                        })
                    }
                    $("#service_selected_service-content").waitMe("hide");
                })

                }


            })
            .on('change', 'select#service_activity_daticash__account-listbox', function(e){
                $("#service_activity-feedback").empty()

            })
    })

    {% endif %}

    /* notification functions */
    $(function () {
        $('.show_notif').on('click', function () {
            var placementFrom = $(this).data('placement-from');
            var placementAlign = $(this).data('placement-align');
            var animateEnter = $(this).data('animate-enter');
            var animateExit = $(this).data('animate-exit');
            var colorName = $(this).data('color-name');
            var text = $(this).data('show-text');

            showNotification(colorName, text, placementFrom, placementAlign, animateEnter, animateExit);
        });
    });

    function showNotification(colorName, text, placementFrom, placementAlign, animateEnter, animateExit) {
        if (colorName === null || colorName === '') { colorName = 'bg-black'; }
        if (text === null || text === '') { text = 'Turning standard Bootstrap alerts'; }
        if (animateEnter === null || animateEnter === '') { animateEnter = 'animated fadeInDown'; }
        if (animateExit === null || animateExit === '') { animateExit = 'animated fadeOutUp'; }
        var allowDismiss = true;

        $.notify({
                message: text
            },
            {
                type: colorName,
                allow_dismiss: allowDismiss,
                newest_on_top: true,
                timer: 99000,
                placement: {
                    from: placementFrom,
                    align: placementAlign
                },
                animate: {
                    enter: animateEnter,
                    exit: animateExit
                },
                template: '<div style="z-index:999" data-notify="container" class="bootstrap-notify-container alert alert-dismissible {0} ' + (allowDismiss ? "p-r-35" : "") + '" role="alert">' +
                '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                '<span data-notify="icon"></span> ' +
                '<span data-notify="title">{1}</span> ' +
                '<span data-notify="message">{2}</span>' +
                '<div class="progress" data-notify="progressbar">' +
                '<div class="progress-bar progress-bar-{0}" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>' +
                '</div>' +
                '<a href="{3}" target="{4}" data-notify="url"></a>' +
                '</div>'
            });
    }

    /* --!-- notification functions */

    function run_waitMe(el, num, effect){
        text = '';
        fontSize = '';
        switch (num) {
            case 1:
                maxSize = '';
                textPos = 'vertical';
                break;
            case 2:
                text = '';
                maxSize = 30;
                textPos = 'vertical';
                break;
            case 3:
                maxSize = 30;
                textPos = 'horizontal';
                fontSize = '18px';
                break;
        }
        el.waitMe({
            effect: effect,
            text: text,
            bg: 'rgba(255,255,255,0.7)',
            color: '#000',
            maxSize: maxSize,
            waitTime: -1,
            source: 'img.svg',
            textPos: textPos,
            fontSize: fontSize,
            onClose: function(el) {}
        });
    }

    function dQS_submitSubscriptionToAprogram(code, confirmButtonText, successMessage, alreadyMessage){
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn swal2-btn btn-info',
                cancelButton: 'btn swal2-btn btn-default'
            },
            buttonsStyling: false
        });

        switch(code) {
            case 400://Action error
                console.log("Something is wrong with the request, possibly missing or improperly formatted parameter.");
                $('.login-feedback').html(show_alert('error', "Failed, innapropriate request. Contact the integer administrator", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ERROR!",
                    "Failed, innapropriate request. Contact the integer administrator",
                    "error"
                )

                break;
            case 403://Action error
                console.log("used ApiKey owner does not have permission to access this resource.");
                $('.login-feedback').html(show_alert('error', "Forbidden, you have not permission to do this action.", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ERROR!",
                    "Forbidden, you have not permission to do this action.",
                    "error"
                )

                break;
            case 409://Action error
                $('.login-feedback').html(show_alert('error', alreadyMessage, 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ALERT!",
                    alreadyMessage,
                    "warning"
                )

                break;
            case 412://Action error
                $('.login-feedback').html(show_alert('error', "Default Basic account does not have sufficient balance.", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire({
                    title: 'WARNNING!',
                    html:
                    'Your <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/current-account/" target="_blank" class="topup_btn"><b>Default Basic account does not have sufficient balance.</b></a>' +
                    '<br><a href="operation?cid=1&sid=2" class="topup_btn"><b>TopUp Now</b></a>' +
                    ' or change your default Basic account and try again.',
                    icon: 'info',
                    showCancelButton: false,
                    focusConfirm: false,
                    confirmButtonText:
                        '<i class="fa fa-thumbs-up"></i> Great!',
                    confirmButtonAriaLabel: 'Thumbs up, great!',
                })

                break;
            default:
                $('.login-feedback').html(show_alert('error', "Request computed failed!", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ERROR REQUEST!",
                    "Request computed failed!",
                    "error"
                )
        }

    }

    function dQS_submitCreateAccountToAprogram(code, aid, pid, confirmButtonText, successMessage, failedMessage, alreadyMessage){

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn swal2-btn btn-info',
                cancelButton: 'btn swal2-btn btn-default'
            },
            buttonsStyling: false
        });

        switch(code) {
            case 400://Action error
                console.log("Something is wrong with the request, possibly missing or improperly formatted parameter.");
                $('.login-feedback').html(show_alert('error', "Failed, innapropriate request. Contact the integer administrator", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ERROR!",
                    "Failed, innapropriate request. Contact the integer administrator",
                    "error"
                )

                break;
            case 403://Action error
                console.log("used ApiKey owner does not have permission to access this resource.");
                $('.login-feedback').html(show_alert('error', "Forbidden, you have not permission to do this action.", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ERROR!",
                    "Forbidden, you have not permission to do this action.",
                    "error"
                )

                break;
            case 409://Action error
                $('.login-feedback').html(show_alert('error', alreadyMessage, 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ALERT!",
                    alreadyMessage,
                    "warning"
                )

                break;
            case 412://Action error
                $('.login-feedback').html(show_alert('error', "Default Basic account does not have sufficient balance.", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire({
                    title: 'WARNNING!',
                    html:
                    'Your <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/current-account/" target="_blank" class="topup_btn"><b>Default Basic account does not have sufficient balance.</b></a>' +
                    '<br><a href="operation?cid=1&sid=2" class="topup_btn"><b>TopUp Now</b></a>' +
                    ' or change your default Basic account and try again.',
                    icon: 'info',
                    showCancelButton: false,
                    focusConfirm: false,
                    confirmButtonText:
                        '<i class="fa fa-thumbs-up"></i> Great!',
                    confirmButtonAriaLabel: 'Thumbs up, great!',
                })
            case 413://Action error
                $('.login-feedback').html(show_alert('error', "Forbidden!, Needs to subscribe first", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire({
                    title: 'WARNNING!',
                    html:
                    'Forbidden!, Needs to subscribe first'+
                    '<br><a href="#" data-toggle="modal" data-target="#modal_subscribe_to_afiliate_program" class="btn btn-sm" id="become_CD_account"></a><b><span class="blink_text">Subscribe to afiliate program</span></b></a>',
                    icon: 'info',
                    showCancelButton: false,
                    focusConfirm: false,
                    confirmButtonText:
                        '<i class="fa fa-thumbs-up"></i> Great!',
                    confirmButtonAriaLabel: 'Thumbs up, great!',
                })

                break;
            default:
                $('.login-feedback').html(show_alert('error', "Request computed failed!", 1));
                scroll_to_(".navbar");
                swalWithBootstrapButtons.fire(
                    "ERROR REQUEST!",
                    "Request computed failed!",
                    "error"
                )
        }

    }

    function dQS_submitTransaction(json_id) {
        //Submit the informations to valide and proceed the transaction (complete version)

        var confirm_request
        var status = "Checking service availability."
        var timerInterval
        var checkPath = "{{ path("transactions_view") }}";
        var confirmPath = "{{ path("transactions_confirm") }}";

        console.log("json_id=")
        console.log(json_id)

        if (json_id && json_id !== 0) {
            /************************************************************ begin process transaction ******************************************/
            var transaction_id = json_id

            Swal.fire({
                title: "Processing...",
                html: "STATUS : <b class=\"status_js\">Updating transaction History.</b>"+
                "<br><span class=\"confirm_js\"></span>",
                icon: "info",
                timer: 700000,
                timerProgressBar: true,
                allowOutsideClick: false,
                onBeforeOpen: () => {
                Swal.showLoading()
            timerInterval = setInterval(() => {
                jQuery.ajax({
                type: "GET",
                url: checkPath + "/" + transaction_id, // call the php file ajax/
                dataType: "json",
                success: function(data){
                    console.log("ajax metthod: ")
                    console.log(data)
                    if(data.id){
                        if(data.stepDescription != null){
                            status = data.stepDescription
                            if(data.type == 2){
                                confirm_request = 'The transaction have been initiated: Required the confirmation for a Source Account.'
                            }
                        }else{
                            status = "Waiting..."
                        }
                        console.log("api response = " +data.stepDescription);

                        switch(data.status.toLowerCase()) {
                            case "completed"://Action successfully
                                clearInterval(timerInterval)
                                Swal.stopTimer()//Stops the timer in case when timer parameter is set. Returns the time left
                                Swal.isTimerRunning()//Returns the status of a timer: true if is running, false if it's paused

                                Swal.fire({
                                    title: "Complete!",
                                    icon: "success",
                                    html: 'Your transaction Successfully Completed.<br> ' +
                                    '<b><a href="{{ path("history") }}" target="_blank">Go to Historique</a></b> ' +
                                    'to show more details',
                                    showCloseButton: true,
                                    showCancelButton: false,
                                    focusConfirm: false,
                                    confirmButtonText:"OK"
                                })
                                break;

                            case "failed"://BAD_REQUEST
                                clearInterval(timerInterval)
                                Swal.stopTimer()//Stops the timer in case when timer parameter is set. Returns the time left
                                Swal.isTimerRunning()//Returns the status of a timer: true if is running, false if it's paused
                                if(status == "Waiting..."){
                                    Swal.fire({
                                        title: "ERROR!",
                                        icon: "error",
                                        html: 'Your transaction failed.<br> ' +
                                        '<b><a href="{{ path("history") }}" target="_blank">Go to Historique</a></b> ' +
                                        'to show more details',
                                        showCloseButton: true,
                                        showCancelButton: false,
                                        focusConfirm: false,
                                        confirmButtonText:"OK"
                                    })
                                }else{
                                    Swal.fire(
                                        "ERROR!",
                                        status,
                                        "error"
                                    )
                                }
                                break;

                            case "canceled"://CANCELED
                                clearInterval(timerInterval)
                                Swal.stopTimer()//Stops the timer in case when timer parameter is set. Returns the time left
                                Swal.isTimerRunning()//Returns the status of a timer: true if is running, false if it's paused

                                Swal.fire(
                                    "ERROR!",
                                    "Transaction canceled by the user.",
                                    "error"
                                )
                                break;

                            case "confirm_requested"://CONFIRM-PIN-CODE
                                clearInterval(timerInterval)
                                Swal.stopTimer()//Stops the timer in case when timer parameter is set. Returns the time left
                                Swal.isTimerRunning()//Returns the status of a timer: true if is running, false if it's paused
                                var currency_sent = data.currencySent;
                                var amount_sent = data.amountSent;
                                var recipient_phone = "+"+data.recipientCountryCode+data.recipientPhone;
                                var recipient_username = data.recipientName;
                                var tmpConfirmCodePrefix = data.tmpConfirmCodePrefix;

                                Swal.fire({
                                    title: "Confirm Transaction!",
                                    html: 'You are about to make a transaction of '+amount_sent+' '+currency_sent+' to '+recipient_phone+'('+recipient_username+'). Enter the confirmation code for the transaction you just received by SMS or EMAIL:'+
                                    '<div class="row" style="flex-flow: nowrap;">'+
                                    '<div class="col-md-4 col-md-4" style="text-align: right; font-size: 27px; margin: 1em auto;"><span style="-webkit-text-stroke: medium;">'+tmpConfirmCodePrefix+' - </span></div>'+
                                    '<div class="col-sm-4 col-md-4"><input id="confirmation_code" class="swal2-input" placeholder="X X X X"></div>'+
                                    '<div class="col-sm-4 col-md-4"></div>'+
                                    '</div>'
                                    ,
                                    //closeOnConfirm: true,
                                    inputPlaceholder: "Your Confirmation Code",
                                    inputAttributes: {
                                        autocapitalize: "off"
                                    },
                                    showCancelButton: true,
                                    showLoaderOnConfirm: true,
                                    focusConfirm: false,
                                    confirmButtonText:'<i class="fa fa-thumbs-up"></i> Confirm',
                                    confirmButtonAriaLabel: "Thumbs up, great!",
                                    cancelButtonText:'<i class="fa fa-thumbs-down"></i> Cancel',
                                    cancelButtonAriaLabel: "Thumbs down",
                                    allowOutsideClick: false,
                                    preConfirm: (confirmation_code) => {
                                    var confirmation_code = document.getElementById('confirmation_code').value;
                                //alert(confirmation_code)
                                //return fetch(`https://api.daticash.com/v1/api/mobilemoney/${transaction_id }/confirm?confirmation_code=${confirmation_code }`, {"method": "PUT", "headers":{"apikey":"sec_5ed93806dd2ca"}})//confirm-password url
                                return fetch(confirmPath + "/" + transaction_id  + "?confirmation_code=" +`${confirmation_code }`, {"method": "POST"})//confirm-password url
                                    .then(response => response.json())
                            .then(githubUser => new Promise((resolve, reject) => {
                                console.log("git")
                                console.log(githubUser)
                                if(githubUser.id){
                                    console.log(githubUser)
                                }else{
                                    if(githubUser.code){
                                        //githubUser.code = 401//for test
                                        if(githubUser.code == 412){
                                            throw new Error("This transaction is not in confirm requested state now. cannot confirm")
                                        }else{
                                            if(githubUser.code == 404){
                                                throw new Error("The given id does not match any transaction")
                                            }else{
                                                if(githubUser.code == 403){
                                                    throw new Error("FORBIDDEN: You do not have permission to access this resource")
                                                }else{
                                                    if(githubUser.code == 401){
                                                        throw new Error("The provided code is not correct, do not forget this code is for one-time use in three tries. remaining to try 2")//here left try//for test
                                                        //throw new Error("The provided code is not correct, do not forget this code is for one-time use in three tries. remaining to try "+githubUser.confirmTrialsNb)//here left try
                                                    }else{
                                                        if(githubUser.code == 400){
                                                            throw new Error("Something is wrong with the request, possibly missing or improperly formatted parameters")
                                                        }else{
                                                            throw new Error('Error Connection, please try again later')
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }

                                setTimeout(() => {
                                    resolve(githubUser);
                        }, 5000);
                    }))
                    .catch(error => {
                            Swal.showValidationMessage(
                            `${error}`
                        )
                    });
                    }
                    }).then((result) => {
                            console.log(result)
                        if(result.isConfirmed && result.value.is_confirmed == true){
                            //result.value.is_confirmed = true//for test
                            var status
                            var timerInterval
                            Swal.fire({
                                title: "Traitement en cour",
                                html: "STATUS : <b class=\"status_js\">Updating transaction History.</b>"+
                                "<br><span class=\"confirm_js\"></span>",
                                icon: "info",
                                timer: 350000,
                                timerProgressBar: true,
                                allowOutsideClick: false,
                                onBeforeOpen: () => {
                                Swal.showLoading()
                            timerInterval = setInterval(() => {
                                //return fetch(`https://api.daticash.com/v1/api/mobilemoney/${transaction_id}`, {"headers": {"apikey": "sec_5ed93806dd2ca"}})//confirm-password url
                                return fetch(checkPath + "/" + transaction_id , {"method": "GET"})//check status url
                                    .then(
                                        function(response) {
                                            console.log("application response after confirm = " + response);
                                            if (!response.ok) {
                                                clearInterval(timerInterval)
                                                // Examine the text in the response
                                                response.json().then(function(data) {
                                                    Swal.fire(
                                                        "ERROR!",
                                                        "Something is wrong with the request, transaction failed",
                                                        "error"
                                                    )
                                                })
                                            }else{
                                                // Examine the text in the response
                                                response.json().then(function(data) {
                                                    status = data.stepDescription
                                                    console.log("api response after confirm = " +data.stepDescription);

                                                    switch(data.status.toLowerCase()) {
                                                        case "completed"://Action successfully
                                                            clearInterval(timerInterval)
                                                            Swal.fire({
                                                                title: "Complete!",
                                                                icon: "success",
                                                                html: 'Your transaction Successfully Completed.<br> ' +
                                                                '<b><a href="{{ path("history") }}" target="_blank">Go to Historique</a></b> ' +
                                                                'to show more details',
                                                                showCloseButton: true,
                                                                showCancelButton: false,
                                                                focusConfirm: false,
                                                                confirmButtonText:"OK"
                                                            })
                                                            break;

                                                        case "failed"://BAD_REQUEST
                                                            clearInterval(timerInterval)
                                                            Swal.fire(
                                                                "ERROR!",
                                                                status,
                                                                "error"
                                                            )
                                                            break;
                                                    }

                                                    const content = Swal.getContent()
                                                    if (content) {
                                                        const b = content.querySelector(".status_js")
                                                        if (b) {
                                                            b.textContent = status
                                                        }
                                                        if (confirm_request) {
                                                            content.querySelector(".confirm_js").textContent = confirm_request
                                                        }
                                                    }
                                                })
                                            }
                                        })
                                    .catch(function(err) {
                                        console.log("Fetch Error :-S", err);
                                    });

                        }, 5000);
                        },
                            showLoaderOnConfirm: true,
                                onClose: () => {
                                clearInterval(timerInterval)
                                Swal.fire(
                                    "Aborded!",
                                    "Your session has been closed. But your transaction take too time...",
                                    "info"
                                )
                            }
                        }).then((result) => {
                                // Read more about handling dismissals below
                                if (result.dismiss === Swal.DismissReason.timer) {
                                console.log("I was closed by the timer")
                                Swal.fire({
                                    title: "<strong>STATUS TRANSACTION</strong>",
                                    icon: "info",
                                    html:
                                    'Was closed by the timer. Your transaction take too long, go to your ' +
                                    '<b><a href="{{ path("history") }}" target="_blank">dashborad</a></b> ' +
                                    'to check manually this transaction status',
                                    showCloseButton: true,
                                    showCancelButton: false,
                                    focusConfirm: false,
                                    confirmButtonText:"OK",
                                })
                            }
                        })

                        }else if (
                            /* Read more about handling dismissals below */
                            result.dismiss === Swal.DismissReason.cancel
                        ) {
                            Swal.fire(
                                'Cancelled',
                                'Your transaction canceled!',
                                'error'
                            )
                        }

                    })
                        break;

                    default :

                    }
                        //end success process transaction
                    }else{
                        Swal.fire({
                            title: "ERROR!",
                            icon: "error",
                            text: "Bad Request thrown(Something is wrong with the request, possibly missing or improperly formatted parameter) or Resource Not Found(The given id may be wrong...) ",
                            showCloseButton: true,
                            showCancelButton: false,
                            focusConfirm: false,
                            confirmButtonText:"OK",
                        }).then(function() {
                            window.location = "{{ path("dashboard.index") }}";
                        })
                    }
                    //end error process transaction
                    $(".sendBtn").text("Good! Click here to Send").prop("disabled", false);
                },
                error: function() {
                    $(".sendBtn").text("Good! Click here to Send").prop("disabled", false);
                    status = "Failed"
                    Swal.fire({
                        title: "ERROR!",
                        icon: "error",
                        text: "Connection failed",
                        showCloseButton: true,
                        showCancelButton: false,
                        focusConfirm: false,
                        confirmButtonText:"OK",
                    }).then(function() {
                        window.location = "{{ path("dashboard.index") }}";
                    })
                }
            });

            const content = Swal.getContent()
            if (content) {
                const b = content.querySelector(".status_js")
                if (b) {
                    b.textContent = status
                }
                if (confirm_request) {
                    content.querySelector(".confirm_js").textContent = confirm_request
                }
            }

        }, 5000);
        },
            showLoaderOnConfirm: true,
                onClose: () => {
                clearInterval(timerInterval)
                Swal.fire(
                    "ABORDED!",
                    "Your session has been closed. But your transaction take too time...",
                    "info"
                )
            }
        }).then((result) => {
                // Read more about handling dismissals below
                if (result.dismiss === Swal.DismissReason.timer) {
                console.log("I was closed by the timer")
                Swal.fire({
                    title: "<strong>STATUS TRANSACTION</strong>",
                    icon: "info",
                    html:
                    'Was closed by the timer. Your transaction take too long, go to your ' +
                    '<b><a href="{{ path("history") }}" target="_blank">dashborad</a></b> ' +
                    'to check manually this transaction status',
                    showCloseButton: true,
                    showCancelButton: false,
                    focusConfirm: false,
                    confirmButtonText:"OK",
                })//.then(function() {
                //window.location = "{{ path("dashboard.index") }}";
                //})
                $(".sendBtn").text("Good! Click here to Send").prop("disabled", false);
            }
        })

            /*********************************************************** end process transaction *********************************************/
        }

    }

    function dQS_submitTransactionErrorCode(json_code) {
        //Submit the informations to valide and proceed the transaction (complete version)
        console.log("json_code error = ")
        console.log(json_code)

        switch(json_code) {
            case "0"://Action successfully
                Swal.fire(
                    "Error!",
                    "CODE 0: Service not available Now! Please try again later.(Thanks for trusting us)",
                    "error"
                )
                break;

            case "400"://Action CODE 400
                Swal.fire(
                    "Error!",
                    "CODE 400: Something is wrong with the request, possibly missing or improperly formatted parameter.",
                    "error"
                )
                break;

            case "402":// insufficient balance
                Swal.fire({
                    title: "Alert!",
                    icon: "warning",
                    html:
                    'The account has insufficient balance. <br> You can Approvisionate It by a '+
                    '<b><a href="{{ path('operation.index', {'cid': "1", 'sid': "2"}) }}">TopUp</a></b> from MobileMoney source or other account source.',
                    showCloseButton: false,
                    showCancelButton: true,
                    showConfirmButton: false,
                    focusConfirm: false,
                    cancelButtonText:"Cancel",
                }).then(function() {
                    {% if app.session.get('requested_url_string') is defined and app.session.get('requested_url_string')|length > 0 %}
                    window.location = "https://daticash.com/send-cash/";
                    {% else %}
                    console.log("cancel")
                    {% endif %}
                })


                break;

            case "404":// Sender account not found
                Swal.fire({
                    title: 'Alert!',
                    html: 'Sender account not found.',
                    icon: 'warning',
                    showCancelButton: false,
                    focusConfirm: true,
                    confirmButtonText: "OK",
                    cancelButtonText: "Cancel",
                }).then((result) => {
                    console.log(result)
                if(result.isConfirmed){
                    {% if app.session.get('requested_url_string') is defined and app.session.get('requested_url_string')|length > 0 %}
                    window.location = "https://daticash.com/send-cash/";

                    {% endif %}
                }
        })

        break;


    case "413"://Amount sent is below the authorized limit
        Swal.fire(
            "Alert!",
            "The amount sent is below the authorized limit for this service.",
            "warning"
        )
        break;

    case "409"://Similar transaction
    case 409 :
        Swal.fire({
            title: 'Alert!',
            html: 'Similar transaction with same parameters have been done in the same day.<br>'+
            'Do you want to continuous?',
            icon: 'warning',
            showCancelButton: true,
            focusConfirm: true,
            confirmButtonText: "YES",
            cancelButtonText: "NO",
        }).then((result) => {
            console.log(result)
        if(result.isConfirmed && result.value){
            console.log("{{ app.session.get('requested_url_string') }}")
            {% if app.session.get('requested_url_string') is defined and app.session.get('requested_url_string')|length > 0 %}
            var requested_url_string = "{{ app.session.get('requested_url_string') }}";
            const regex = /skip_idem_potency=0/gi;
            requested_url_string = requested_url_string.replace(regex, 'skip_idem_potency=1');
            console.log(requested_url_string)

            const regex1 = /&amp;/gi;
            requested_url_string = requested_url_string.replace(regex1, '&');

            window.location = requested_url_string ;

            {% else %}
            $("#skip_idem_potency").val("1")
            $(".sendBtn").attr("disabled", false).trigger("click")

            $("#skip_idem_potency").val("0")
            console.log($("#skip_idem_potency").val())


            {% endif %}
        }else if (
            /* Read more about handling dismissals below */
            result.dismiss === Swal.DismissReason.cancel
        ) {
            {% if app.session.get('requested_url_string') is defined and app.session.get('requested_url_string')|length > 0 %}
            window.location = "https://daticash.com/send-cash/";
            {% else %}
            Swal.fire(
                'Cancelled',
                'Your transaction canceled!',
                'error'
            )
            {% endif %}
        }
    })


        break;

    case "412"://Account need activation
        Swal.fire(
            "Alert!",
            "User account need activation.",
            "warning"
        )
        break;

    case "422"://Similar transaction
        Swal.fire(
            "Alert!",
            "The requested service is not available.",
            "warning"
        )
        break;

    default :
        Swal.fire({
            title: "Sorry!",
            icon: "error",
            text: "Service not available Now! Please try again later.(Thanks for trusting us)",
            showCloseButton: true,
            showCancelButton: false,
            focusConfirm: false,
            confirmButtonText:"OK",
        })//.then(function() {
        //window.location = "{{ path("dashboard.index") }}";
        //})
    }



    }

    function list_affiliate_account(user_id, apiResource){
        //list affiliate account
        var data;
        var list_affiliate_account = '{{ path("list_affiliate_account", {'type':'apiResource','id':'user_id'}) }}';
        list_affiliate_account = list_affiliate_account.replace("apiResource", apiResource);
        list_affiliate_account = list_affiliate_account.replace("user_id", user_id);

        //fetch(`${list_affiliate_account}`, {"method": "GET", "headers":{"apikey":"sec_5ed93806dd2ca"}})//check status url
        fetch(`https://api.daticash.com/v1/api/${apiResource}/user/${user_id}/list`, {"headers": {"apikey": "sec_5ed93806dd2ca"}, "method": "GET"})//for test
            .then(response => {
            if (!response.ok) {
            response.json().then(function(data) {
                console.log(data);
                throw new Error(response.statusText)
            })
        }else{
            response.json().then(function(data) {
                console.log(data);
                if (data) { // for test
                    return data;
                    console.log(data);
                }else{
                    return 0;
                }
            })
        }
    })
    }

    function show_alert(type = "error", message, dismissible = 1){
        switch(type.toLowerCase()) {
            case "error":
                if (dismissible === 1){
                    return ('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbsp'+ message +'<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                }else{
                    return ('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i>&nbsp'+ message +'<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                }
                break;

            case "success":
                if (dismissible === 1){
                    return ('<div class="alert alert-success alert-dismissible"><i class="fa fa-exclamation-circle"></i>&nbsp'+ message +'<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                }else{
                    return ('<div class="alert alert-success"><i class="fa fa-exclamation-circle"></i>&nbsp'+ message +'<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                }
                break;

            default :
                return ('');
        }
    }

    function scroll_to_(elem){
        var elem = $(elem);

        var elemTop = elem.first().offset().top;
        $('html,body').animate({
            scrollTop:elemTop
        }, "fast");

    }

    //--></script>


{% if _profile.id is defined and _profile.id is not empty %}

    <!-- /.modal -->
    <div class="modal fade" id="modal_subscribe_to_afiliate_program">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header mb-2">
                    <h4 class="modal-title">
                        SUBSCRIBE&nbsp
                        <small>(By joining our program, you will be rewarded while enjoying our services.)</small>
                    </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="col-sm-12 col-md-12">
                    <div class="row">

                        <div class="col-sm-4 col-md-4">
                            <div class="thumbnail">
                                <img src="{{ asset('assets/img/illustrations/merchant_account-illu.jpg') }}">
                                <div class="caption">
                                    {% set var = 0 %}
                                    {% for userRight in _profile.roles %}
                                        {% if 'ROLE_MERCHANT' in userRight %}
                                            {% set var = var + 1 %}
                                        {% endif %}
                                    {% endfor %}
                                    {% if var == 0 %}
                                        <h3 class="text-ellipsied" data-role="MERCHANT">Become Merchant</h3>
                                        <p>
                                            Gives a way to merchant to get paid online...
                                            <span class="pincode_label" style="float:right">
                                        <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/merchant-account/" title="Learn more about Merchant Account" target="_blank"><i class="fa fa-question-circle datibox-bg-light"></i>&nbsp;Learn more</a>
                                    </span>
                                        </p>

                                        <p class="pt-4 mb-1">
                                            <a href="javascript:void(0)" class="btn btn-info waves-effect btn_subscribe_to_afiliate_program" role="button" id="" data-value="MERCHANT" title="Click here to join a marchant program group" >SUBSCRIBE</a>
                                        </p>
                                    {% else %}
                                        <h3 class="text-ellipsied" data-role="MERCHANT">You are now a Merchant</h3>
                                        <p>
                                            Gives a way to merchant to get paid online...
                                            <span class="pincode_label" style="float:right">
                                        <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/merchant-account/" title="Learn more about Merchant Account" target="_blank"><i class="fa fa-question-circle datibox-bg-light"></i>&nbsp;Learn more</a>
                                    </span>
                                        </p>

                                        <p class="pt-4 mb-1">
                                            <a href="#" data-account_type="ACTIVITY" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="Add new Merchant Activity" >ADD NEW ACTIVITY</a>
                                        </p>

                                    {% endif %}
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-4 col-md-4">
                            <div class="thumbnail">
                                <img src="{{ asset('assets/img/illustrations/developer_account-illu.jpg') }}">
                                <div class="caption">
                                    {% set var = 0 %}
                                    {% for userRight in _profile.roles %}
                                        {% if 'ROLE_DEVELOPER' in userRight %}
                                            {% set var = var + 1 %}
                                        {% endif %}
                                    {% endfor %}
                                    {% if var == 0 %}
                                        <h3 class="text-ellipsied" data-role="DEVELOPER">Become Developer</h3>
                                        <p>
                                            Extend daticash and receive commissions...
                                            <span class="pincode_label" style="float:right">
                                        <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/developer-account/" title="Learn more about Developer Account" target="_blank"><i class="fa fa-question-circle datibox-bg-light"></i>&nbsp;Learn more</a>
                                    </span>
                                        </p>

                                        <p class="pt-4 mb-1">
                                            <a href="javascript:void(0)" class="btn btn-info waves-effect btn_subscribe_to_afiliate_program" role="button" id="" data-value="DEVELOPER" title="Click here to join a Developer program group" >SUBSCRIBE</a>
                                        </p>
                                    {% else %}
                                        <h3 class="text-ellipsied" data-role="DEVELOPER">You are now Developer</h3>
                                        <p>
                                            Extend daticash and receive commissions...
                                            <span class="pincode_label" style="float:right">
                                        <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/developer-account/" title="Learn more about Developer Account" target="_blank"><i class="fa fa-question-circle datibox-bg-light"></i>&nbsp;Learn more</a>
                                    </span>
                                        </p>

                                        <p class="pt-4 mb-1">
                                            <a href="#" data-account_type="APPLICATION" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="Add new Application" >ADD NEW APPLICATION</a>
                                        </p>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-4 col-md-4">
                            <div class="thumbnail">
                                <img src="{{ asset('assets/img/illustrations/business_account-illu.jpg') }}">
                                <div class="caption">
                                    {% set var = 0 %}
                                    {% for userRight in _profile.roles %}
                                        {% if 'ROLE_BUSINESS' in userRight %}
                                            {% set var = var + 1 %}
                                        {% endif %}
                                    {% endfor %}
                                    {% if var == 0 %}
                                        <h3 class="text-ellipsied" data-role="BUSINESS">Become Daticash Agent</h3>
                                        <p>
                                            Send money to others and receive commissions...
                                            <span class="pincode_label" style="float:right">
                                        <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/business-account/" title="Learn more about Daticash Agent Account" target="_blank"><i class="fa fa-question-circle datibox-bg-light"></i>&nbsp;Learn more</a>
                                    </span>
                                        </p>

                                        <p class="pt-4 mb-1">
                                            <a href="javascript:void(0)" class="btn btn-info waves-effect btn_subscribe_to_afiliate_program" role="button" id="" data-value="BUSINESS " title="Click here to join a Daticash Agent program group" >SUBSCRIBE</a>
                                        </p>
                                    {% else %}
                                        <h3 class="text-ellipsied data-role="BUSINESS"">Your are now Daticash Agent</h3>
                                        <p>
                                            Send money to others and receive commissions...
                                            <span class="pincode_label" style="float:right">
                                        <a href="https://support.daticash.com/docs/daticash-api/daticash-users-guide/accounts-2/business-account/" title="Learn more about Daticash Agent Account" target="_blank"><i class="fa fa-question-circle datibox-bg-light"></i>&nbsp;Learn more</a>
                                    </span>
                                        </p>
                                        {% set _accountGroupForUser = _accountGroupAll %}
                                        {% set var1 = 0 %}
                                        {% for key1, accountGroupAll in _accountGroupAll %}
                                            {% if accountGroupAll.name == "ROLE_MERCHANT"%}
                                                {% for key2, accountGroupForUser in _accountGroupForUser %}
                                                    {% if key2 == key1 %}
                                                        {% for key2, account in _accounts %}
                                                            {% if accountGroupAll.name in account.roles and accountGroupAll.name == "ROLE_BUSINESS"%}
                                                                {% set var1 = var1 + 1 %}
                                                            {% endif %}
                                                        {% endfor %}
                                                    {% endif %}
                                                {% endfor %}
                                            {% endif %}
                                        {% endfor %}
                                        {% if var1 == 0 %}
                                            <p class="pt-4 mb-1">
                                                <a href="#" data-account_type="POINT_OF_SALE" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="Create your first point of sale" >FIRST BUSINESS</a>
                                            </p>
                                        {% elseif var1 > 0 %}
                                            <p class="pt-4 mb-1">
                                                <a href="#" data-account_type="POINT_OF_SALE" data-toggle="modal" data-target="#dati_create_account_modal" class="btn btn-info waves-effect btn_dati_create_account_modal" role="button" title="Add new point of sale">ADD POINT</a>
                                            </p>
                                        {% endif %}
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <!-- /.modal of create account-->
    <div class="modal fade" id="dati_create_account_modal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header mb-2">
                    <h4 class="modal-title">
                        <!-- CREATE NEW ACTIVITY&nbsp / UPDATE ACTIVITY-->
                        <!-- CREATE NEW APPLICATION&nbsp / UPDATE APPLICATION-->
                        <!-- CREATE NEW POINT OF SALE&nbsp-->
                        ACCOUNTS
                    </h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="col-sm-12 col-md-12">
                    <div class="row">

                        <div class="col-sm-12 col-md-12 pl-5 pr-5">
                            <form class="form-horizontal">
                                <div class="input-group mb-3 form-daticash_account">
                                    <div class="col-sm-10" style="width:80%;">
                                        <select class="swal2-select daticash__account-listbox" style="display: flex; margin: 0; width: 100%;" name="modal_daticash__account-listbox" id="modal_daticash__account-listbox">
                                            <option style="color:#17a2b8;" data-account_type="ACTIVITY" data-account_name="" data-account_description ="Merchant account type(Activity)"  data-account_id ="0" value="0" class="nav-link" selected>Add New </option>

                                            {% set _accountGroupForUser = _accountGroupAll %}

                                            {% for key1, accountGroupAll in _accountGroupAll %}
                                                <optgroup style="color:gray;" label="My {{ accountGroupAll.description }}">
                                                    {% set var = 0 %}
                                                    {% for key2, accountGroupForUser in _accountGroupForUser %}
                                                        {% if key2 == key1 %}
                                                            {% for key2, account in _accounts %}
                                                                {% if accountGroupAll.name in account.roles %}
                                                                    {% set var = var + 1 %}
                                                                    <option style="color:#17a2b8;" data-account_type="{% if 'ROLE_MERCHANT' in account.roles %}ACTIVITY{% elseif 'ROLE_DEVELOPER' in account.roles  %}APPLICATION{% elseif 'ROLE_BUSINESS' in account.roles  %}POINT_OF_SALE{% endif %}" data-account_name="{{ account.name }}" data-account_description="{{ account.description }}"  data-account_id="{{ account.id }}" value="{{ account.id }}" class="nav-link">{{ account.name }}</option>
                                                                {% endif %}
                                                            {% endfor %}
                                                        {% endif %}
                                                    {% endfor %}
                                                    {% if var == 0 %}
                                                        <option data-account_id="" value="" disabled="" >Empty</option>
                                                    {% endif %}
                                                </optgroup>
                                            {% endfor %}

                                        </select>
                                    </div>
                                    <div class="col-sm-2" style="width:20%;">
                                        <a class="btn btn-default btn-sm change_phone_number_btn disabled" href="#" data-user_id = "{{ _profile.id }}" data-toggle="modal" data-target="#change_phone_number_modal">
                                            <i class="fas fa-edit">
                                            </i>
                                            Change
                                        </a>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="name" class="col-sm-2 col-form-label">Name</label>
                                    <div class="col-sm-10">
                                        <small id="modal_account_name-feedback"></small>
                                        <input type="text" class="form-control" id="name" name="name" placeholder="Name" value="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="description" class="col-sm-2 col-form-label">Description</label>
                                    <div class="col-sm-10">
                                        <small id="modal_account_description-feedback"></small>
                                        <textarea class="form-control" id="description" name="description" placeholder="Description" value=""></textarea>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="offset-sm-2 col-sm-10 account_action_div_btn">
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

    <!-- /.modal of add participiant-->
    <div class="modal fade" id="dati_create_participiant_modal">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header mb-2">
                    <h4 class="modal-title">
                        Add New Participiant
                    </h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="col-sm-12 col-md-12">
                    <div class="row">
                        <div class="col-sm-12 col-md-12 pl-5 pr-5">
                            <div class="login-feedback"></div>
                            <form method="post" class="form login-form" >
                                <input type="hidden" class="form-control" id="service_id" name="service_id" value="">
                                <input type="hidden" class="form-control" id="participiant_id" name="participiant_id" value="">

                                <label for="phone_number" style="width: 100%; margin-bottom: .5rem;">
                                    <font style="vertical-align: inherit;">Phone number&nbsp</font>
                                    <small id="phone-feedback" style="display: block;"></small>
                                </label>
                                <div class="input-group mb-3 form-daticash_phone">
                                    <input type="hidden" class="form-control" id="country_code" name="country_code" value="">
                                    <input type="phone" class="form-control" id="phone_number" name="phone_number">
                                    <div class="input-group-append" id="input_group_appendto_phone" name="input_group_appendto_phone">
                                        <div class="input-group-text">
                                            <span class="fas fa-user"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="input-group mb-3">
                                    <label for="lastname" style="width: 100%; margin-bottom: .5rem;">
                                        <font style="vertical-align: inherit;">Last Name</font>
                                        <small id="lastname-feedback"></small>
                                    </label>
                                    <input type="text" class="form-control" id="lastname" name="lastname" placeholder="Last Name">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <span class="fas fa-user"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="input-group mb-3">
                                    <label for="firstname" style="width: 100%; margin-bottom: .5rem;">
                                        <font style="vertical-align: inherit;">First Name&nbsp</font>
                                        <small id="firstname-feedback"></small>
                                    </label>
                                    <input type="text" class="form-control" id="firstname" name="firstname" placeholder="First Name">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <span class="fas fa-user"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="input-group mb-3">
                                    <label for="email" style="width: 100%; margin-bottom: .5rem;">
                                        <font style="vertical-align: inherit;">Email</font>
                                        <small id="email-feedback"></small>
                                    </label>
                                    <input type="email" class="form-control" id="email" name="email" placeholder="Email">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <span class="fas fa-envelope"></span>
                                        </div>
                                    </div>
                                </div>

                                <div id="re_captcha_container" class="text-center mb-2">
                                    <div id="g-recaptcha"></div>
                                </div>
                                <hr>

                                <div class="form-group_daticash_register_if_not_exist">
                                    <div class="offset-sm-2 col-sm-10 participiant_action_div_btn"></div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->


    <!-- /.modal of add participiant-->
    <div class="modal fade" id="dati_create_entity_modal">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header mb-2">
                    <h4 class="modal-title">
                        Add New Entity
                    </h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="col-sm-12 col-md-12">
                    <div class="row">
                        <div class="col-sm-12 col-md-12 pl-5 pr-5">
                            <div class="login-feedback"></div>
                            <form method="post" class="form login-form" >
                                <input type="hidden" class="form-control" id="service_id" name="service_id" value="">
                                <input type="hidden" class="form-control" id="participiant_id" name="participiant_id" value="">

                                <div id="auto_form">
                                    {#
    						<div class="input-group mb-3">
    						  <label for="lastname" style="width: 100%; margin-bottom: .5rem;">
    							<font style="vertical-align: inherit;">Last Name</font>
    							<small id="lastname-feedback"></small>
    						  </label>
    						  <input type="text" class="form-control" id="lastname" name="lastname" placeholder="Last Name">
    						  <div class="input-group-append">
    							<div class="input-group-text">
    							  <span class="fas fa-user"></span>
    							</div>
    						  </div>
    						</div>

    						<div class="input-group mb-3">
    						  <label for="firstname" style="width: 100%; margin-bottom: .5rem;">
    							<font style="vertical-align: inherit;">First Name&nbsp</font>
    							<small id="firstname-feedback"></small>
    						  </label>
    						  <input type="text" class="form-control" id="firstname" name="firstname" placeholder="First Name">
    						  <div class="input-group-append">
    							<div class="input-group-text">
    							  <span class="fas fa-user"></span>
    							</div>
    						  </div>
    						</div>

    						<div class="input-group mb-3">
    						  <label for="email" style="width: 100%; margin-bottom: .5rem;">
    							<font style="vertical-align: inherit;">Email</font>
    							<small id="email-feedback"></small>
    						  </label>
    						  <input type="email" class="form-control" id="email" name="email" placeholder="Email">
    						  <div class="input-group-append">
    							<div class="input-group-text">
    							  <span class="fas fa-envelope"></span>
    							</div>
    						  </div>
    						</div>
    						#}
                                </div>

                                <div id="re_captcha_container" class="text-center mb-2">
                                    <div id="g-recaptcha"></div>
                                </div>
                                <hr>

                                <div class="form-group_daticash_register_if_not_exist">
                                    <div class="offset-sm-2 col-sm-10 entity_action_div_btn"></div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->

{% endif %}

{% block topup_and_sweetalert %}

{% endblock %}

</body>
</html>
